function [sparseS] = computeSparseL(n, V, W, t, z, c)
% n is the number of basis functions
% V is N
% W is total wealth of the system
% t is chi
% z is zeta
% c is the wZero parameter in f(theta)

h = 1.0/(n+1);
num_nonzeros = 0;

for i = 1:n
    for j = 1:n
        for k = 1:n
            if (i == (n-1))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k <= (j-2)) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k <= (j-2)) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k == (j-1)) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k == (j-1)) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k == j) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k == j) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k == (j+1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((i == n) && (k >= (j + 2)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i-1)) && (k <= (i-2)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i-1)) && (k == (i-1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i - 1)) && (k == i))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == i) && (k <= (i-2)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == i) && (k == (i-1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == i) && (k == i))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == i) && (k == (i+1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+1)) && (k <= (i-1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+1)) && (k == i))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+1)) && (k == (i+1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+1)) && (k == (i+2)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k <= i) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k <= i) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k == (i+1)) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k == (i+1)) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k == (i+2)) && (j < n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k == (i+2)) && (j == n))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i+2)) && (k == (i+3)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i + 3)) && (k <= (i+1)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i + 3)) && (k == (i + 2)))
                num_nonzeros = num_nonzeros + 1;
            elseif ((j == (i + 3)) && (k == (i + 3)))
                num_nonzeros = num_nonzeros + 1;
            end
        end
    end
end

fprintf('Count zero done \n')

rows = zeros(num_nonzeros, 1);
cols = zeros(num_nonzeros, 1);
values = zeros(num_nonzeros, 1);
index = 0;

for i = 1:n
    if (mod(i,1000)==0)
        disp(i)
    end
    for j = 1:n
        for k = 1:n
            if (i == (n-1))
                index = index + 1;
                rows(index) = k;
                cols(index) = i + n * (j - 1);
                values(index) = 0;
            elseif ((i == n) && (k <= (j-2)) && (j < n))
                index = index + 1;
                rows(index) = k;
                cols(index) = i + n * (j - 1);
                values(index) = (1/4).*c.^2.*h.^(-2).*W.^(-1).*z.*((-1).*h.*((-2)+h.*((-3)+2.*j))+ ...
  h.*((-2)+h.*(3+2.*j))+2.*((-1)+h.*((-2)+j)).*((-1)+h.*j).*log(1+( ...
  -1).*h.*j)+2.*((-1)+h.*j).*((-1)+h.*(2+j)).*log(1+(-1).*h.*j)+(-2) ...
  .*(1+h+(-1).*h.*j).^2.*log(1+h+(-1).*h.*j)+(-2).*((-1)+h+h.*j) ...
  .^2.*log(1+(-1).*h.*(1+j))).*(3.*h.^2+2.*((-1)+h.*k).^2.*log(1+( ...
  -1).*h.*k)+(-1).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k)+(-1).* ...
  log(1+(-1).*h.*(1+k))+2.*h.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*log( ...
  1+(-1).*h.*(1+k))+2.*h.*k.*log(1+(-1).*h.*(1+k))+(-2).*h.^2.*k.* ...
  log(1+(-1).*h.*(1+k))+(-1).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)));

            elseif ((i == n) && (k <= (j-2)) && (j == n))
                    index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                    values(index) = (1/4).*c.^2.*W.^(-1).*z.*((-6)+log(256)+4.*log(h)).*((-3).*h.^2+( ...
  -2).*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(1+h+(-1).*h.*k).^2.*log(1+ ...
  h+(-1).*h.*k)+((-1)+h+h.*k).^2.*log(1+(-1).*h.*(1+k)));

            elseif ((i == n) && (k == (j-1)) && (j < n))
                    index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                    values(index) = (1/4).*c.^2.*h.^(-2).*W.^(-1).*z.*(2.*((13/18).*h.^2+(41/18).* ...
  h.^3+(295/216).*h.^4+(-13/9).*h.^3.*k+(-41/18).*h.^4.*k+(13/18).* ...
  h.^4.*k.^2+(-1/6).*((-1)+h.*k).^3.*((-9)+h.*((-4)+9.*k)).*log(1+( ...
  -1).*h.*k).^2+(2/9).*h.*log(1+(-1).*h.*(1+k))+(7/3).*h.^2.*log(1+( ...
  -1).*h.*(1+k))+(2/3).*h.^3.*log(1+(-1).*h.*(1+k))+(-29/9).*h.^4.* ...
  log(1+(-1).*h.*(1+k))+(-2/3).*h.^2.*k.*log(1+(-1).*h.*(1+k))+( ...
  -14/3).*h.^3.*k.*log(1+(-1).*h.*(1+k))+(-2/3).*h.^4.*k.*log(1+(-1) ...
  .*h.*(1+k))+(2/3).*h.^3.*k.^2.*log(1+(-1).*h.*(1+k))+(7/3).*h.^4.* ...
  k.^2.*log(1+(-1).*h.*(1+k))+(-2/9).*h.^4.*k.^3.*log(1+(-1).*h.*(1+ ...
  k))+(-1/2).*log(1+(-1).*h.*(1+k)).^2+(2/3).*h.*log(1+(-1).*h.*(1+ ...
  k)).^2+h.^2.*log(1+(-1).*h.*(1+k)).^2+(-2).*h.^3.*log(1+(-1).*h.*( ...
  1+k)).^2+(5/6).*h.^4.*log(1+(-1).*h.*(1+k)).^2+2.*h.*k.*log(1+(-1) ...
  .*h.*(1+k)).^2+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k)).^2+(-2).* ...
  h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+2.*h.^4.*k.*log(1+(-1).*h.*(1+k) ...
  ).^2+(-3).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)).^2+2.*h.^3.*k.^2.* ...
  log(1+(-1).*h.*(1+k)).^2+h.^4.*k.^2.*log(1+(-1).*h.*(1+k)).^2+2.* ...
  h.^3.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-2/3).*h.^4.*k.^3.*log(1+( ...
  -1).*h.*(1+k)).^2+(-1/2).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k)).^2+( ...
  -1/2).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k).*(h.*(2+h+(-2).* ...
  h.*k)+2.*(1+(-2).*h.*k+h.^2.*((-1)+k.^2)).*log(1+(-1).*h.*(1+k)))+ ...
  (1/18).*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*(h.*(14+(-1).*h.*(9+ ...
  14.*k))+18.*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k)+36.*(1+(-2).* ...
  h.*k+h.^2.*((-1)+k.^2)).*log(1+(-1).*h.*(1+k))))+(-1).*(h.*(2+(-1) ...
  .*h.*(5+2.*k))+(-2).*((-1)+h+h.*k).*((-1)+h.*(3+k)).*log(1+(-1).* ...
  h.*(1+k))+2.*((-1)+h.*(2+k)).^2.*log(1+(-1).*h.*(2+k))).*(3.*h.^2+ ...
  2.*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(1+h).*((-1)+(-1).*h+2.*h.*k) ...
  .*log(1+h+(-1).*h.*k)+(-1).*log(1+(-1).*h.*(1+k))+2.*h.*log(1+(-1) ...
  .*h.*(1+k))+(-1).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.*k.*log(1+(-1) ...
  .*h.*(1+k))+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.* ...
  k.^2.*log(1+(-2).*h.*k+h.^2.*((-1)+k.^2))));

            elseif ((i == n) && (k == (j-1)) && (j == n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/432).*c.^2.*(2+k).^(-2).*W.^(-1).*z.*((-2227)+(-912).*log(2)+ ...
  6336.*log(2).^2+4860.*log(3)+(-7776).*log(2).*log(3)+108.*log(( ...
  19683/256))+(-180).*log(h).^2+108.*((-11)+log((387420489/256))).* ...
  log(2+k)+24.*log(h).*(68+24.*log(2)+(-81).*log(3)+27.*log(2+k))); 

            elseif ((i == n) && (k == j) && (j < n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/16).*c.^2.*h.^(-2).*W.^(-1).*z.*((h.*(2+h.*(3+(-2).*k))+2.*(1+( ...
  -2).*h.*((-1)+k)+h.^2.*((-2)+k).*k).*log(1+(-1).*h.*k)+(-2).*(1+h+ ...
  (-1).*h.*k).^2.*log(1+h+(-1).*h.*k)).^2+((-2).*h+3.*h.^2+(2+4.* ...
  h.^2.*k+(-4).*h.*(1+k)).*log(1+(-1).*h.*k)+2.*h.^2.*k.^2.*log((( ...
  -1)+h.*k).*((-1)+h+h.*k).^(-1))+(-2).*log(1+(-1).*h.*(1+k))+4.*h.* ...
  log(1+(-1).*h.*(1+k))+(-2).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.*k.*( ...
  h+(-2).*((-1)+h).*log(1+(-1).*h.*(1+k)))).*(2.*h+9.*h.^2+2.*(3+h.* ...
  (2+(-6).*k)+h.^2.*k.*((-2)+3.*k)).*log(1+(-1).*h.*k)+(-4).*(1+h+( ...
  -1).*h.*k).^2.*log(1+h+(-1).*h.*k)+(-2).*log(1+(-1).*h.*(1+k))+4.* ...
  h.*log(1+(-1).*h.*(1+k))+(-2).*h.^2.*log(1+(-1).*h.*(1+k))+(-2).* ...
  h.^2.*k.^2.*log(1+(-1).*h.*(1+k))+(-2).*h.*k.*(h+2.*((-1)+h).*log( ...
  1+(-1).*h.*(1+k)))));

            elseif ((i == n) && (k == j) && (j == n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/16).*c.^2.*(1+k).^(-2).*W.^(-1).*z.*(36+(-16).*log(2)+(-10).* ...
  log(256)+log(256).^2+(-4).*log(h).^2+4.*log(h).*(5.*((-5)+log(256) ...
  )+(-12).*log(1+k))+4.*((-13)+3.*log(256)).*log(1+k)+(-28).*log(1+ ...
  k).^2);

            elseif ((i == n) && (k == (j+1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/432).*c.^2.*h.^(-2).*W.^(-1).*z.*(36.*((-3)+12.*h.^3.*((-1)+k) ...
  .^2.*(1+k)+4.*h.*((-1)+3.*k)+h.^2.*(6+12.*k+(-18).*k.^2)+h.^4.*(5+ ...
  (-12).*k+6.*k.^2+4.*k.^3)).*log(1+(-1).*h.*j).^2+(-36).*((-3)+(-4) ...
  .*h+12.*h.*(1+h).*k+(-6).*h.^2.*(3+2.*h).*k.^2+4.*h.^3.*(3+h).* ...
  k.^3).*log(1+(-1).*h.*k).^2+(-24).*log(1+(-1).*h.*j).*((-2).*h.*(( ...
  -1)+h.*((-1)+k)).^3+9.*((-1)+(-2).*h+2.*h.^3+h.^4+(-2).*((-2)+h).* ...
  h.*(1+h).^2.*k+(-6).*h.^2.*(1+h).*k.^2+2.*h.^3.*(2+h).*k.^3).*log( ...
  1+h+(-1).*h.*k))+12.*log(1+(-1).*h.*k).*((-1).*h.*((-1)+h.*k).^2.* ...
  ((-22)+h.*((-27)+22.*k))+18.*((-1)+(-2).*h+(-1).*h.^2+2.*h.*(2+3.* ...
  h+h.^2).*k+(-1).*h.^2.*(6+6.*h+h.^2).*k.^2+2.*h.^3.*(2+h).*k.^3).* ...
  log(1+h+(-1).*h.*k))+h.*(108.*log(1+h+(-1).*h.*k).*((1+h+(-1).*h.* ...
  k).^2.*((-2)+h+2.*h.*k)+2.*h.^3.*k.^4.*log(((-1)+h.*j).*((-1)+h.* ...
  k).^(-1)))+h.*(156+(-156).*h.*((-1)+2.*k)+h.^2.*((-29)+(-156).*k+ ...
  156.*k.^2)+(-108).*h.^2.*k.^4.*log(((-1)+h.*j).*((-1)+h.*k).^(-1)) ...
  .*log(((-1)+h.*j).*((-1)+h.*k)))));

            elseif ((i == n) && (k >= (j + 2)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = 0;
                
            elseif ((j == (i-1)) && (k <= (i-2)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/72).*c.*h.^(-3).*W.^(-1).*z.*(h.*(6+(-3).*h.*(5+4.*j)+h.^2.*( ...
  5+15.*j+6.*j.^2))+6.*((-1)+h.*j).^2.*((-1)+h.*(3+j)).*log(1+(-1).* ...
  h.*j)+(-6).*((-1)+h+h.*j).^3.*log(1+(-1).*h.*(1+j))).*(3.*h.^2+2.* ...
  ((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(-1).*(1+h+(-1).*h.*k).^2.*log( ...
  1+h+(-1).*h.*k)+(-1).*log(1+(-1).*h.*(1+k))+2.*h.*log(1+(-1).*h.*( ...
  1+k))+(-1).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.*k.*log(1+(-1).*h.*( ...
  1+k))+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*k.^2.*log( ...
  1+(-1).*h.*(1+k)));
                
            elseif ((j == (i-1)) && (k == (i-1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/54000).*c.*h.^(-3).*W.^(-1).*z.*(1110.*h+(-1845).*h.^2+9595.* ...
  h.^3+(-26735).*h.^4+9847.*h.^5+(-4440).*h.^2.*k+5535.*h.^3.*k+( ...
  -19190).*h.^4.*k+26735.*h.^5.*k+6660.*h.^3.*k.^2+(-5535).*h.^4.* ...
  k.^2+9595.*h.^5.*k.^2+(-4440).*h.^4.*k.^3+1845.*h.^5.*k.^3+1110.* ...
  h.^5.*k.^4+450.*((-1)+h.*k).^3.*(13+(-1).*h.*(25+26.*k)+h.^2.*(( ...
  -40)+25.*k+13.*k.^2)).*log(1+(-1).*h.*k).^2+1110.*log(1+(-1).*h.*( ...
  1+k))+(-5550).*h.*log(1+(-1).*h.*(1+k))+24600.*h.^2.*log(1+(-1).* ...
  h.*(1+k))+(-51600).*h.^3.*log(1+(-1).*h.*(1+k))+46050.*h.^4.*log( ...
  1+(-1).*h.*(1+k))+(-14610).*h.^5.*log(1+(-1).*h.*(1+k))+(-5550).* ...
  h.*k.*log(1+(-1).*h.*(1+k))+22200.*h.^2.*k.*log(1+(-1).*h.*(1+k))+ ...
  (-73800).*h.^3.*k.*log(1+(-1).*h.*(1+k))+103200.*h.^4.*k.*log(1+( ...
  -1).*h.*(1+k))+(-46050).*h.^5.*k.*log(1+(-1).*h.*(1+k))+11100.* ...
  h.^2.*k.^2.*log(1+(-1).*h.*(1+k))+(-33300).*h.^3.*k.^2.*log(1+(-1) ...
  .*h.*(1+k))+73800.*h.^4.*k.^2.*log(1+(-1).*h.*(1+k))+(-51600).* ...
  h.^5.*k.^2.*log(1+(-1).*h.*(1+k))+(-11100).*h.^3.*k.^3.*log(1+(-1) ...
  .*h.*(1+k))+22200.*h.^4.*k.^3.*log(1+(-1).*h.*(1+k))+(-24600).* ...
  h.^5.*k.^3.*log(1+(-1).*h.*(1+k))+5550.*h.^4.*k.^4.*log(1+(-1).* ...
  h.*(1+k))+(-5550).*h.^5.*k.^4.*log(1+(-1).*h.*(1+k))+(-1110).* ...
  h.^5.*k.^5.*log(1+(-1).*h.*(1+k))+(-3150).*log(1+(-1).*h.*(1+k)) ...
  .^2+15750.*h.*log(1+(-1).*h.*(1+k)).^2+(-31500).*h.^2.*log(1+(-1) ...
  .*h.*(1+k)).^2+31500.*h.^3.*log(1+(-1).*h.*(1+k)).^2+(-15750).* ...
  h.^4.*log(1+(-1).*h.*(1+k)).^2+3150.*h.^5.*log(1+(-1).*h.*(1+k)) ...
  .^2+15750.*h.*k.*log(1+(-1).*h.*(1+k)).^2+(-63000).*h.^2.*k.*log( ...
  1+(-1).*h.*(1+k)).^2+94500.*h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+( ...
  -63000).*h.^4.*k.*log(1+(-1).*h.*(1+k)).^2+15750.*h.^5.*k.*log(1+( ...
  -1).*h.*(1+k)).^2+(-31500).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)).^2+ ...
  94500.*h.^3.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(-94500).*h.^4.*k.^2.* ...
  log(1+(-1).*h.*(1+k)).^2+31500.*h.^5.*k.^2.*log(1+(-1).*h.*(1+k)) ...
  .^2+31500.*h.^3.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-63000).*h.^4.* ...
  k.^3.*log(1+(-1).*h.*(1+k)).^2+31500.*h.^5.*k.^3.*log(1+(-1).*h.*( ...
  1+k)).^2+(-15750).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k)).^2+15750.* ...
  h.^5.*k.^4.*log(1+(-1).*h.*(1+k)).^2+3150.*h.^5.*k.^5.*log(1+(-1) ...
  .*h.*(1+k)).^2+750.*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k).*(( ...
  -1).*h.*(6+(-3).*h.*(5+4.*k)+h.^2.*(5+15.*k+6.*k.^2))+6.*((-1)+h+ ...
  h.*k).^3.*log(1+(-1).*h.*(1+k)))+(-30).*((-1)+h.*k).^2.*log(1+(-1) ...
  .*h.*k).*(37+(-275).*h+625.*h.^2+(-925).*h.^3+(-111).*h.*k+550.* ...
  h.^2.*k+(-625).*h.^3.*k+111.*h.^2.*k.^2+(-275).*h.^3.*k.^2+(-37).* ...
  h.^3.*k.^3+150.*((-1)+h.*((-1)+k)).^2.*((-1)+h.*(3+k)).*log(1+h+( ...
  -1).*h.*k)+300.*((-1)+h+h.*k).^3.*log(1+(-1).*h.*(1+k))));
                
            elseif ((j == (i - 1)) && (k == i))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/108000).*c.*h.^(-3).*W.^(-1).*z.*(2220.*h+(-2310).*h.^2+(-6310) ...
  .*h.^3+470.*h.^4+819.*h.^5+900.*(7+(-5).*h.*((-2)+7.*k)+(-10).* ...
  h.^3.*((-1)+k).^2.*(8+7.*k)+5.*h.^4.*((-1)+k).^3.*(13+7.*k)+10.* ...
  h.^2.*((-3)+(-4).*k+7.*k.^2)+h.^5.*((-18)+65.*k+(-80).*k.^2+30.* ...
  k.^3+10.*k.^4)).*log(1+(-1).*h.*j).^2+2220.*log(1+(-1).*h.*k)+( ...
  -7500).*h.*log(1+(-1).*h.*k)+(-13500).*h.^2.*log(1+(-1).*h.*k)+( ...
  -6300).*log(1+(-1).*h.*k).^2+(-9000).*h.*log(1+(-1).*h.*k).^2+ ...
  9000.*h.*log(1+h+(-1).*h.*k)+13500.*h.^2.*log(1+h+(-1).*h.*k)+( ...
  -6000).*h.^3.*log(1+h+(-1).*h.*k)+(-16500).*h.^4.*log(1+h+(-1).* ...
  h.*k)+(-6000).*h.^5.*log(1+h+(-1).*h.*k)+9000.*log(1+(-1).*h.*k).* ...
  log(1+h+(-1).*h.*k)+18000.*h.*log(1+(-1).*h.*k).*log(1+h+(-1).*h.* ...
  k)+9000.*h.^2.*log(1+(-1).*h.*k).*log(1+h+(-1).*h.*k)+(-60).* ...
  h.^4.*k.^4.*(75.*(7+2.*h).*log(1+(-1).*h.*k).^2+(-1).*h.*(37+150.* ...
  log(1+h+(-1).*h.*k))+(-5).*log(1+(-1).*h.*k).*(37+(-25).*h+30.*(5+ ...
  2.*h).*log(1+h+(-1).*h.*k)))+(-30).*h.^3.*k.^3.*((-300).*(7+4.*h) ...
  .*log(1+(-1).*h.*k).^2+h.*(296+(-77).*h+150.*(8+3.*h).*log(1+h+( ...
  -1).*h.*k))+10.*log(1+(-1).*h.*k).*(74+(-100).*h+(-45).*h.^2+30.*( ...
  10+8.*h+h.^2).*log(1+h+(-1).*h.*k)))+(-10).*h.^2.*k.^2.*(900.*(7+ ...
  6.*h).*log(1+(-1).*h.*k).^2+(-30).*log(1+(-1).*h.*k).*(74+(-150).* ...
  h+(-135).*h.^2+30.*(10+12.*h+3.*h.^2).*log(1+h+(-1).*h.*k))+h.*(( ...
  -1332)+693.*h+631.*h.^2+150.*((-36)+(-27).*h+4.*h.^2).*log(1+h+( ...
  -1).*h.*k)))+10.*h.*k.*(450.*(7+8.*h).*log(1+(-1).*h.*k).^2+(-30) ...
  .*log(1+(-1).*h.*k).*(37+(-100).*h+(-135).*h.^2+30.*(5+8.*h+3.* ...
  h.^2).*log(1+h+(-1).*h.*k))+h.*((-888)+693.*h+1262.*h.^2+(-47).* ...
  h.^3+150.*((-24)+(-27).*h+8.*h.^2+11.*h.^3).*log(1+h+(-1).*h.*k))) ...
  +60.*h.^5.*k.^5.*(37+(-105).*log(1+(-1).*h.*k)+150.*log(1+h+(-1).* ...
  h.*k)).*log(((-1)+h.*j).*((-1)+h.*k).^(-1))+(-60).*log(1+(-1).*h.* ...
  j).*(37+85.*h+(-30).*h.^2+(-230).*h.^3+(-215).*h.^4+(-63).*h.^5+ ...
  5.*h.*(1+h).^3.*((-37)+43.*h).*k+(-10).*h.^2.*(1+h).^2.*((-37)+ ...
  23.*h).*k.^2+10.*h.^3.*((-37)+(-34).*h+3.*h.^2).*k.^3+5.*h.^4.*( ...
  37+17.*h).*k.^4+150.*(1+h.*(2+(-5).*k)+(-2).*h.^3.*((-1)+k).^2.*( ...
  4+5.*k)+h.^4.*((-1)+k).^3.*(7+5.*k)+2.*h.^2.*((-1)+(-4).*k+5.* ...
  k.^2)+h.^5.*((-2)+7.*k+(-8).*k.^2+2.*k.^3+2.*k.^4)).*log(1+h+(-1) ...
  .*h.*k)+105.*h.^5.*k.^5.*log(((-1)+h.*j).*((-1)+h.*k).^(-1))));

            elseif ((j == i) && (k <= (i-2)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/72).*c.*h.^(-3).*W.^(-1).*z.*(h.*(6+(-3).*h.*((-5)+4.*j)+h.^2.* ...
  (5+(-15).*j+6.*j.^2))+(-1).*h.*(6+(-3).*h.*(5+4.*j)+h.^2.*(5+15.* ...
  j+6.*j.^2))+(-6).*((-1)+h.*((-3)+j)).*((-1)+h.*j).^2.*log(1+(-1).* ...
  h.*j)+(-6).*((-1)+h.*j).^2.*((-1)+h.*(3+j)).*log(1+(-1).*h.*j)+6.* ...
  ((-1)+h.*((-1)+j)).^3.*log(1+h+(-1).*h.*j)+6.*((-1)+h+h.*j).^3.* ...
  log(1+(-1).*h.*(1+j))).*(3.*h.^2+2.*((-1)+h.*k).^2.*log(1+(-1).* ...
  h.*k)+(-1).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k)+(-1).*log(1+( ...
  -1).*h.*(1+k))+2.*h.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*log(1+(-1) ...
  .*h.*(1+k))+2.*h.*k.*log(1+(-1).*h.*(1+k))+(-2).*h.^2.*k.*log(1+( ...
  -1).*h.*(1+k))+(-1).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)));

            elseif ((j == i) && (k == (i-1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/108000).*c.*h.^(-3).*W.^(-1).*z.*(900.*((-1)+h+h.*k).^4.*((-7)+ ...
  h.*((-18)+7.*k)).*log(1+(-1).*h.*j).^2+900.*((-1)+h.*k).^4.*((-13) ...
  +h.*((-10)+13.*k)).*log(1+(-1).*h.*k).^2+(-60).*((-1)+h+h.*k).^2.* ...
  log(1+(-1).*h.*j).*((-37)+11.*h+(-361).*h.^2+(-963).*h.^3+h.*(111+ ...
  (-22).*h+361.*h.^2).*k+h.^2.*((-111)+11.*h).*k.^2+37.*h.^3.*k.^3+ ...
  300.*((-1)+h.*((-2)+k)).*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(-150) ...
  .*((-1)+h.*((-2)+k)).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+( ...
  -60).*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*(37+(-175).*h+75.*h.^2+ ...
  200.*h.^3+h.*((-111)+350.*h+(-75).*h.^2).*k+(111+(-175).*h).* ...
  h.^2.*k.^2+(-37).*h.^3.*k.^3+150.*(1+h+(-1).*h.*k).^2.*((-1)+h.*k) ...
  .*log(1+h+(-1).*h.*k))+(-1).*h.*((-2220)+(-2310).*h+(-20690).* ...
  h.^2+(-13030).*h.^3+17181.*h.^4+10.*h.*(888+693.*h+4138.*h.^2+ ...
  1303.*h.^3).*k+(-10).*h.^2.*(1332+693.*h+2069.*h.^2).*k.^2+30.* ...
  h.^3.*(296+77.*h).*k.^3+(-2220).*h.^4.*k.^4+1500.*(1+h+(-1).*h.*k) ...
  .^2.*(6+h.*(3+(-12).*k)+h.^2.*((-4)+(-3).*k+6.*k.^2)).*log(1+h+( ...
  -1).*h.*k))+750.*(h.*(2+h.*(3+(-2).*k))+h.*((-2)+h.*(3+2.*k))+2.*( ...
  (-1)+h.*((-2)+k)).*((-1)+h.*k).*log(1+(-1).*h.*k)+2.*((-1)+h.*k).* ...
  ((-1)+h.*(2+k)).*log(1+(-1).*h.*k)+(-2).*(1+h+(-1).*h.*k).^2.*log( ...
  1+h+(-1).*h.*k)+(-2).*((-1)+h+h.*k).^2.*log(1+(-1).*h.*(1+k))).*(( ...
  -6).*((-1)+h+h.*k).^2.*((-1)+h.*(4+k)).*log(1+(-1).*h.*j)+(-6).*(( ...
  -1)+h+h.*j).*((-1)+2.*h.*((-4)+k)+(-1).*h.^2.*(2+k).^2).*log(1+( ...
  -1).*h.*(2+k))+h.*((-6)+3.*h.*(9+4.*k)+(-1).*h.^2.*(26+27.*k+6.* ...
  k.^2)+(-72).*((-1)+h.*(2+k)).*log(1+(-1).*h.*(2+k)))));

            elseif ((j == i) && (k == i))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/54000).*c.*h.^(-3).*W.^(-1).*z.*((-1110).*h+1845.*h.^2+(-9595) ...
  .*h.^3+26735.*h.^4+(-9847).*h.^5+4440.*h.^2.*k+(-5535).*h.^3.*k+ ...
  19190.*h.^4.*k+(-26735).*h.^5.*k+(-6660).*h.^3.*k.^2+5535.*h.^4.* ...
  k.^2+(-9595).*h.^5.*k.^2+4440.*h.^4.*k.^3+(-1845).*h.^5.*k.^3+( ...
  -1110).*h.^5.*k.^4+h.*((-1110)+15.*h.*((-123)+296.*k)+h.^2.*(3905+ ...
  5535.*k+(-6660).*k.^2)+5.*h.^3.*(1403+(-1562).*k+(-1107).*k.^2+ ...
  888.*k.^3)+h.^4.*(1403+(-7015).*k+3905.*k.^2+1845.*k.^3+(-1110).* ...
  k.^4))+(-450).*((-1)+h.*k).^3.*(7+(-7).*h.*((-5)+2.*k)+h.^2.*(40+( ...
  -35).*k+7.*k.^2)).*log(1+(-1).*h.*k).^2+(-450).*((-1)+h.*k).^3.*( ...
  13+(-1).*h.*(25+26.*k)+h.^2.*((-40)+25.*k+13.*k.^2)).*log(1+(-1).* ...
  h.*k).^2+(-30).*(1+h+(-1).*h.*k).^2.*((-37)+3.*h.*(13+37.*k)+(-3) ...
  .*h.^2.*((-88)+26.*k+37.*k.^2)+h.^3.*(88+(-264).*k+39.*k.^2+37.* ...
  k.^3)).*log(1+h+(-1).*h.*k)+(-1350).*((-1)+h.*((-1)+k)).^5.*log(1+ ...
  h+(-1).*h.*k).^2+30.*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*((-37)+ ...
  25.*h+575.*h.^2+675.*h.^3+h.*(111+(-50).*h+(-575).*h.^2).*k+h.^2.* ...
  ((-111)+25.*h).*k.^2+37.*h.^3.*k.^3+150.*((-1)+h.*((-3)+k)).*(1+h+ ...
  (-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+(-1110).*log(1+(-1).*h.*(1+k) ...
  )+5550.*h.*log(1+(-1).*h.*(1+k))+(-24600).*h.^2.*log(1+(-1).*h.*( ...
  1+k))+51600.*h.^3.*log(1+(-1).*h.*(1+k))+(-46050).*h.^4.*log(1+( ...
  -1).*h.*(1+k))+14610.*h.^5.*log(1+(-1).*h.*(1+k))+5550.*h.*k.*log( ...
  1+(-1).*h.*(1+k))+(-22200).*h.^2.*k.*log(1+(-1).*h.*(1+k))+73800.* ...
  h.^3.*k.*log(1+(-1).*h.*(1+k))+(-103200).*h.^4.*k.*log(1+(-1).*h.* ...
  (1+k))+46050.*h.^5.*k.*log(1+(-1).*h.*(1+k))+(-11100).*h.^2.* ...
  k.^2.*log(1+(-1).*h.*(1+k))+33300.*h.^3.*k.^2.*log(1+(-1).*h.*(1+ ...
  k))+(-73800).*h.^4.*k.^2.*log(1+(-1).*h.*(1+k))+51600.*h.^5.* ...
  k.^2.*log(1+(-1).*h.*(1+k))+11100.*h.^3.*k.^3.*log(1+(-1).*h.*(1+ ...
  k))+(-22200).*h.^4.*k.^3.*log(1+(-1).*h.*(1+k))+24600.*h.^5.* ...
  k.^3.*log(1+(-1).*h.*(1+k))+(-5550).*h.^4.*k.^4.*log(1+(-1).*h.*( ...
  1+k))+5550.*h.^5.*k.^4.*log(1+(-1).*h.*(1+k))+1110.*h.^5.*k.^5.* ...
  log(1+(-1).*h.*(1+k))+3150.*log(1+(-1).*h.*(1+k)).^2+(-15750).*h.* ...
  log(1+(-1).*h.*(1+k)).^2+31500.*h.^2.*log(1+(-1).*h.*(1+k)).^2+( ...
  -31500).*h.^3.*log(1+(-1).*h.*(1+k)).^2+15750.*h.^4.*log(1+(-1).* ...
  h.*(1+k)).^2+(-3150).*h.^5.*log(1+(-1).*h.*(1+k)).^2+(-15750).*h.* ...
  k.*log(1+(-1).*h.*(1+k)).^2+63000.*h.^2.*k.*log(1+(-1).*h.*(1+k)) ...
  .^2+(-94500).*h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+63000.*h.^4.*k.* ...
  log(1+(-1).*h.*(1+k)).^2+(-15750).*h.^5.*k.*log(1+(-1).*h.*(1+k)) ...
  .^2+31500.*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(-94500).*h.^3.* ...
  k.^2.*log(1+(-1).*h.*(1+k)).^2+94500.*h.^4.*k.^2.*log(1+(-1).*h.*( ...
  1+k)).^2+(-31500).*h.^5.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(-31500).* ...
  h.^3.*k.^3.*log(1+(-1).*h.*(1+k)).^2+63000.*h.^4.*k.^3.*log(1+(-1) ...
  .*h.*(1+k)).^2+(-31500).*h.^5.*k.^3.*log(1+(-1).*h.*(1+k)).^2+ ...
  15750.*h.^4.*k.^4.*log(1+(-1).*h.*(1+k)).^2+(-15750).*h.^5.*k.^4.* ...
  log(1+(-1).*h.*(1+k)).^2+(-3150).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k) ...
  ).^2+(-750).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k).*((-1).*h.*( ...
  6+(-3).*h.*(5+4.*k)+h.^2.*(5+15.*k+6.*k.^2))+6.*((-1)+h+h.*k).^3.* ...
  log(1+(-1).*h.*(1+k)))+30.*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*(37+ ...
  (-275).*h+625.*h.^2+(-925).*h.^3+(-111).*h.*k+550.*h.^2.*k+(-625) ...
  .*h.^3.*k+111.*h.^2.*k.^2+(-275).*h.^3.*k.^2+(-37).*h.^3.*k.^3+ ...
  150.*((-1)+h.*((-1)+k)).^2.*((-1)+h.*(3+k)).*log(1+h+(-1).*h.*k)+ ...
  300.*((-1)+h+h.*k).^3.*log(1+(-1).*h.*(1+k))));

            elseif ((j == i) && (k == (i+1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/108000).*c.*h.^(-3).*W.^(-1).*z.*(900.*(7+(-5).*h.*((-2)+7.*k)+ ...
  10.*h.^3.*j.*(2.*j.^2+3.*j.*((-2)+k)+(-12).*((-1)+k).*k)+(-10).* ...
  h.^2.*(3.*j.^2+(-6).*j.*k+(-4).*((-1)+k).*k)+h.^5.*((-12).*((-1)+ ...
  k).^5+(-40).*j.^3.*((-1)+k).*k+15.*j.^4.*((-2)+3.*k))+5.*h.^4.* ...
  j.^2.*(3.*j.^2+24.*((-1)+k).*k+(-4).*j.*((-4)+5.*k))).*log(1+(-1) ...
  .*h.*j).^2+900.*((-1)+h.*k).^4.*((-7)+h.*((-10)+7.*k)).*log(1+(-1) ...
  .*h.*k).^2+(-60).*((-1)+h.*k).^3.*log(1+(-1).*h.*k).*(37+(-125).* ...
  h+(-225).*h.^2+(-74).*h.*k+125.*h.^2.*k+37.*h.^2.*k.^2+150.*(1+h+( ...
  -1).*h.*k).^2.*log(1+h+(-1).*h.*k))+60.*log(1+(-1).*h.*j).*((-37)+ ...
  (-235).*h+405.*h.^2+(-120).*h.^3+90.*h.^4+(-72).*h.^5+(-150).*h.* ...
  j+300.*h.^2.*j+(-75).*h.^2.*j.^2+(-300).*h.^3.*j.^2+(-675).*h.^4.* ...
  j.^2+(-650).*h.^3.*j.^3+(-800).*h.^4.*j.^3+450.*h.^5.*j.^3+675.* ...
  h.^5.*j.^4+90.*h.^5.*j.^5+335.*h.*k+(-1160).*h.^2.*k+(-315).* ...
  h.^3.*k+(-360).*h.^4.*k+360.*h.^5.*k+(-1050).*h.^2.*j.*k+(-300).* ...
  h.^3.*j.*k+1350.*h.^4.*j.*k+1275.*h.^3.*j.^2.*k+3000.*h.^4.*j.^2.* ...
  k+(-675).*h.^5.*j.^2.*k+700.*h.^4.*j.^3.*k+(-1900).*h.^5.*j.^3.*k+ ...
  (-900).*h.^5.*j.^4.*k+755.*h.^2.*k.^2+990.*h.^3.*k.^2+540.*h.^4.* ...
  k.^2+(-720).*h.^5.*k.^2+300.*h.^3.*j.*k.^2+(-2700).*h.^4.*j.*k.^2+ ...
  (-2325).*h.^4.*j.^2.*k.^2+1350.*h.^5.*j.^2.*k.^2+1450.*h.^5.* ...
  j.^3.*k.^2+(-555).*h.^3.*k.^3+(-360).*h.^4.*k.^3+720.*h.^5.*k.^3+ ...
  1350.*h.^4.*j.*k.^3+(-675).*h.^5.*j.^2.*k.^3+90.*h.^4.*k.^4+(-360) ...
  .*h.^5.*k.^4+72.*h.^5.*k.^5+(-150).*((-1)+h.*j).^2.*(1+2.*h.*j+( ...
  -3).*h.*k).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+h.*(49320+( ...
  -13860).*h+5640.*h.^2+(-2430).*h.^3+864.*h.^4+47100.*j+7500.*h.*j+ ...
  13500.*h.^2.*j+19050.*h.*j.^2+12750.*h.^2.*j.^2+6750.*h.^3.*j.^2+ ...
  11200.*h.^2.*j.^3+2500.*h.^3.*j.^3+(-9000).*h.^4.*j.^3+(-1350).* ...
  h.^3.*j.^4+(-10125).*h.^4.*j.^4+(-1080).*h.^4.*j.^5+(-47100).*k+( ...
  -87780).*h.*k+(-246420).*h.^2.*k+9720.*h.^3.*k+(-4320).*h.^4.*k+( ...
  -109500).*h.*j.*k+(-264000).*h.^2.*j.*k+(-40500).*h.^3.*j.*k+( ...
  -32250).*h.^2.*j.^2.*k+(-33000).*h.^3.*j.^2.*k+20250.*h.^4.*j.^2.* ...
  k+4000.*h.^3.*j.^3.*k+38000.*h.^4.*j.^3.*k+13500.*h.^4.*j.^4.*k+ ...
  90450.*h.*k.^2+484170.*h.^2.*k.^2+19170.*h.^3.*k.^2+8640.*h.^4.* ...
  k.^2+250500.*h.^2.*j.*k.^2+81000.*h.^3.*j.*k.^2+26250.*h.^3.* ...
  j.^2.*k.^2+(-40500).*h.^4.*j.^2.*k.^2+(-29000).*h.^4.*j.^3.*k.^2+( ...
  -229450).*h.^2.*k.^3+(-40780).*h.^3.*k.^3+(-19890).*h.^4.*k.^3+( ...
  -40500).*h.^3.*j.*k.^3+20250.*h.^4.*j.^2.*k.^3+11600.*h.^3.*k.^4+ ...
  16945.*h.^4.*k.^4+(-3670).*h.^4.*k.^5+1500.*(j+(-1).*k).*(1+h+(-1) ...
  .*h.*k).^2.*((-6)+(-3).*h.*(j+(-5).*k)+h.^2.*(4.*j.^2+(-5).*j.*k+( ...
  -5).*k.^2)).*log(1+h+(-1).*h.*k)));

            elseif ((j == (i+1)) && (k <= (i-1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/72).*c.*h.^(-3).*W.^(-1).*z.*(h.*(6+(-3).*h.*((-5)+4.*j)+h.^2.* ...
  (5+(-15).*j+6.*j.^2))+h.*(6+(-3).*h.*(5+4.*j)+h.^2.*(5+15.*j+6.* ...
  j.^2))+6.*((-1)+h.*((-1)+j)).^3.*log(1+(-1).*h.*i)+(-6).*((-1)+h.* ...
  ((-3)+j)).*((-1)+h.*j).^2.*log(1+(-1).*h.*j)+6.*((-1)+h.*j).^2.*(( ...
  -1)+h.*(3+j)).*log(1+(-1).*h.*j)+(-6).*((-1)+h+h.*j).^3.*log(1+( ...
  -1).*h.*(1+j))).*(3.*h.^2+2.*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+( ...
  -1).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k)+(-1).*log(1+(-1).* ...
  h.*(1+k))+2.*h.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*log(1+(-1).*h.*( ...
  1+k))+2.*h.*k.*log(1+(-1).*h.*(1+k))+(-2).*h.^2.*k.*log(1+(-1).* ...
  h.*(1+k))+(-1).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)));

            elseif ((j == (i+1)) && (k == i))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/108000).*c.*h.^(-3).*W.^(-1).*z.*(900.*((-1)+h+h.*k).^4.*((-7)+ ...
  h.*((-18)+7.*k)).*log(1+(-1).*h.*j).^2+900.*((-1)+h.*k).^4.*((-13) ...
  +h.*((-10)+13.*k)).*log(1+(-1).*h.*k).^2+(-60).*((-1)+h+h.*k).^2.* ...
  log(1+(-1).*h.*j).*((-37)+11.*h+(-361).*h.^2+(-963).*h.^3+h.*(111+ ...
  (-22).*h+361.*h.^2).*k+h.^2.*((-111)+11.*h).*k.^2+37.*h.^3.*k.^3+ ...
  300.*((-1)+h.*((-2)+k)).*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(-150) ...
  .*((-1)+h.*((-2)+k)).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+( ...
  -60).*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*(37+(-175).*h+75.*h.^2+ ...
  200.*h.^3+h.*((-111)+350.*h+(-75).*h.^2).*k+(111+(-175).*h).* ...
  h.^2.*k.^2+(-37).*h.^3.*k.^3+150.*(1+h+(-1).*h.*k).^2.*((-1)+h.*k) ...
  .*log(1+h+(-1).*h.*k))+(-1).*h.*((-2220)+(-2310).*h+(-20690).* ...
  h.^2+(-13030).*h.^3+17181.*h.^4+10.*h.*(888+693.*h+4138.*h.^2+ ...
  1303.*h.^3).*k+(-10).*h.^2.*(1332+693.*h+2069.*h.^2).*k.^2+30.* ...
  h.^3.*(296+77.*h).*k.^3+(-2220).*h.^4.*k.^4+1500.*(1+h+(-1).*h.*k) ...
  .^2.*(6+h.*(3+(-12).*k)+h.^2.*((-4)+(-3).*k+6.*k.^2)).*log(1+h+( ...
  -1).*h.*k))+750.*(h.*(2+h.*(3+(-2).*k))+h.*((-2)+h.*(3+2.*k))+2.*( ...
  (-1)+h.*((-2)+k)).*((-1)+h.*k).*log(1+(-1).*h.*k)+2.*((-1)+h.*k).* ...
  ((-1)+h.*(2+k)).*log(1+(-1).*h.*k)+(-2).*(1+h+(-1).*h.*k).^2.*log( ...
  1+h+(-1).*h.*k)+(-2).*((-1)+h+h.*k).^2.*log(1+(-1).*h.*(1+k))).*( ...
  h.*(6+(-3).*h.*(9+4.*k)+h.^2.*(26+27.*k+6.*k.^2))+6.*((-1)+h+h.*k) ...
  .^2.*((-1)+h.*(4+k)).*log(1+(-1).*h.*j)+(-6).*((-1)+h.*(2+k)).^3.* ...
  log(1+(-1).*h.*(2+k))));

            elseif ((j == (i+1)) && (k == (i+1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/216000).*c.*h.^(-3).*W.^(-1).*z.*((-9420).*h+(-349470).*h.^2+( ...
  -219410).*h.^3+(-305165).*h.^4+(-58919).*h.^5+(-13860).*h.*i+( ...
  -343620).*h.^2.*i+(-341640).*h.^3.*i+(-330480).*h.^4.*i+(-185760) ...
  .*h.^5.*i+(-1530).*h.^2.*i.^2+(-83070).*h.^3.*i.^2+(-153360).* ...
  h.^4.*i.^2+(-104760).*h.^5.*i.^2+780.*h.^3.*i.^3+(-19620).*h.^4.* ...
  i.^3+(-11880).*h.^5.*i.^3+1485.*h.^4.*i.^4+7155.*h.^5.*i.^4+1728.* ...
  h.^5.*i.^5+13860.*h.*k+(-14700).*h.^2.*k+(-67950).*h.^3.*k+( ...
  -208700).*h.^4.*k+(-13075).*h.^5.*k+(-337500).*h.^2.*i.*k+( ...
  -351000).*h.^3.*i.*k+(-378000).*h.^4.*i.*k+(-324000).*h.^5.*i.*k+( ...
  -87750).*h.^3.*i.^2.*k+(-189000).*h.^4.*i.^2.*k+(-243000).*h.^5.* ...
  i.^2.*k+(-31500).*h.^4.*i.^3.*k+(-81000).*h.^5.*i.^3.*k+(-10125).* ...
  h.^5.*i.^4.*k+339030.*h.^2.*k.^2+287550.*h.^3.*k.^2+157950.*h.^4.* ...
  k.^2+122350.*h.^5.*k.^2+86970.*h.^3.*k.^3+102300.*h.^4.*k.^3+ ...
  91350.*h.^5.*k.^3+30015.*h.^4.*k.^4+46425.*h.^5.*k.^4+8397.*h.^5.* ...
  k.^5+1800.*((-1)+h.*k).^3.*(13+(-1).*h.*(25+26.*k)+h.^2.*((-40)+ ...
  25.*k+13.*k.^2)).*log(1+(-1).*h.*k).^2+4.*((-1110).*h+(-1845).* ...
  h.^2+3905.*h.^3+7015.*h.^4+1403.*h.^5+1110.*log(1+(-1).*h.*i)+ ...
  5550.*h.*log(1+(-1).*h.*i)+11100.*h.^2.*log(1+(-1).*h.*i)+11100.* ...
  h.^3.*log(1+(-1).*h.*i)+5550.*h.^4.*log(1+(-1).*h.*i)+1110.*h.^5.* ...
  log(1+(-1).*h.*i)+(-3150).*log(1+(-1).*h.*i).^2+(-15750).*h.*log( ...
  1+(-1).*h.*i).^2+(-31500).*h.^2.*log(1+(-1).*h.*i).^2+(-31500).* ...
  h.^3.*log(1+(-1).*h.*i).^2+(-15750).*h.^4.*log(1+(-1).*h.*i).^2+( ...
  -3150).*h.^5.*log(1+(-1).*h.*i).^2+(-1110).*log(1+(-1).*h.*k)+ ...
  750.*h.*log(1+(-1).*h.*k)+17250.*h.^2.*log(1+(-1).*h.*k)+20250.* ...
  h.^3.*log(1+(-1).*h.*k)+3150.*log(1+(-1).*h.*k).^2+15750.*h.*log( ...
  1+(-1).*h.*k).^2+18000.*h.^2.*log(1+(-1).*h.*k).^2+(-4500).*h.* ...
  log(1+h+(-1).*h.*k)+(-20250).*h.^2.*log(1+h+(-1).*h.*k)+(-30750).* ...
  h.^3.*log(1+h+(-1).*h.*k)+(-18750).*h.^4.*log(1+h+(-1).*h.*k)+( ...
  -3750).*h.^5.*log(1+h+(-1).*h.*k)+4500.*log(1+(-1).*h.*i).*log(1+ ...
  h+(-1).*h.*k)+22500.*h.*log(1+(-1).*h.*i).*log(1+h+(-1).*h.*k)+ ...
  45000.*h.^2.*log(1+(-1).*h.*i).*log(1+h+(-1).*h.*k)+45000.*h.^3.* ...
  log(1+(-1).*h.*i).*log(1+h+(-1).*h.*k)+22500.*h.^4.*log(1+(-1).* ...
  h.*i).*log(1+h+(-1).*h.*k)+4500.*h.^5.*log(1+(-1).*h.*i).*log(1+h+ ...
  (-1).*h.*k)+(-4500).*log(1+(-1).*h.*k).*log(1+h+(-1).*h.*k)+( ...
  -22500).*h.*log(1+(-1).*h.*k).*log(1+h+(-1).*h.*k)+(-31500).* ...
  h.^2.*log(1+(-1).*h.*k).*log(1+h+(-1).*h.*k)+(-13500).*h.^3.*log( ...
  1+(-1).*h.*k).*log(1+h+(-1).*h.*k)+(-30).*h.^4.*k.^4.*(525.*(1+h) ...
  .*log(1+(-1).*h.*i).^2+(-525).*(1+h).*log(1+(-1).*h.*k).^2+h.*(37+ ...
  150.*log(1+h+(-1).*h.*k))+(-5).*(1+h).*log(1+(-1).*h.*i).*(37+ ...
  150.*log(1+h+(-1).*h.*k))+5.*log(1+(-1).*h.*k).*(37+(-5).*h+150.*( ...
  1+h).*log(1+h+(-1).*h.*k)))+15.*h.^3.*k.^3.*(2100.*(1+h).^2.*log( ...
  1+(-1).*h.*i).^2+(-300).*(7+14.*h+4.*h.^2).*log(1+(-1).*h.*k).^2+( ...
  -20).*(1+h).^2.*log(1+(-1).*h.*i).*(37+150.*log(1+h+(-1).*h.*k))+ ...
  h.*(296+123.*h+150.*(8+9.*h).*log(1+h+(-1).*h.*k))+10.*log(1+(-1) ...
  .*h.*k).*(74+(-20).*h+(-115).*h.^2+30.*(10+20.*h+7.*h.^2).*log(1+ ...
  h+(-1).*h.*k)))+(-5).*h.^2.*k.^2.*(6300.*(1+h).^3.*log(1+(-1).*h.* ...
  i).^2+(-900).*(7+21.*h+12.*h.^2).*log(1+(-1).*h.*k).^2+(-60).*(1+ ...
  h).^3.*log(1+(-1).*h.*i).*(37+150.*log(1+h+(-1).*h.*k))+h.*(1332+ ...
  1107.*h+(-781).*h.^2+150.*(36+81.*h+41.*h.^2).*log(1+h+(-1).*h.*k) ...
  )+30.*log(1+(-1).*h.*k).*(74+(-30).*h+(-345).*h.^2+(-135).*h.^3+ ...
  30.*(10+30.*h+21.*h.^2+3.*h.^3).*log(1+h+(-1).*h.*k)))+5.*h.*k.*( ...
  3150.*(1+h).^4.*log(1+(-1).*h.*i).^2+(-450).*(7+28.*h+24.*h.^2).* ...
  log(1+(-1).*h.*k).^2+(-30).*(1+h).^4.*log(1+(-1).*h.*i).*(37+150.* ...
  log(1+h+(-1).*h.*k))+30.*log(1+(-1).*h.*k).*(37+(-20).*h+(-345).* ...
  h.^2+(-270).*h.^3+30.*(5+20.*h+21.*h.^2+6.*h.^3).*log(1+h+(-1).* ...
  h.*k))+h.*(888+1107.*h+(-1562).*h.^2+(-1403).*h.^3+150.*(24+81.*h+ ...
  82.*h.^2+25.*h.^3).*log(1+h+(-1).*h.*k)))+30.*h.^5.*k.^5.*((-37)+ ...
  105.*log(1+(-1).*h.*i)+105.*log(1+(-1).*h.*k)+(-150).*log(1+h+(-1) ...
  .*h.*k)).*log(((-1)+h.*i).*((-1)+h.*k).^(-1)))+4440.*log(1+(-1).* ...
  h.*(1+k))+(-11400).*h.*log(1+(-1).*h.*(1+k))+276600.*h.^2.*log(1+( ...
  -1).*h.*(1+k))+61800.*h.^3.*log(1+(-1).*h.*(1+k))+602700.*h.^4.* ...
  log(1+(-1).*h.*(1+k))+281220.*h.^5.*log(1+(-1).*h.*(1+k))+10800.* ...
  h.*i.*log(1+(-1).*h.*(1+k))+183600.*h.^2.*i.*log(1+(-1).*h.*(1+k)) ...
  +367200.*h.^3.*i.*log(1+(-1).*h.*(1+k))+734400.*h.^4.*i.*log(1+( ...
  -1).*h.*(1+k))+604800.*h.^5.*i.*log(1+(-1).*h.*(1+k))+5400.*h.^2.* ...
  i.^2.*log(1+(-1).*h.*(1+k))+102600.*h.^3.*i.^2.*log(1+(-1).*h.*(1+ ...
  k))+388800.*h.^4.*i.^2.*log(1+(-1).*h.*(1+k))+280800.*h.^5.*i.^2.* ...
  log(1+(-1).*h.*(1+k))+3600.*h.^3.*i.^3.*log(1+(-1).*h.*(1+k))+ ...
  75600.*h.^4.*i.^3.*log(1+(-1).*h.*(1+k))+(-21600).*h.^5.*i.^3.* ...
  log(1+(-1).*h.*(1+k))+2700.*h.^4.*i.^4.*log(1+(-1).*h.*(1+k))+( ...
  -45900).*h.^5.*i.^4.*log(1+(-1).*h.*(1+k))+(-8640).*h.^5.*i.^5.* ...
  log(1+(-1).*h.*(1+k))+(-33000).*h.*k.*log(1+(-1).*h.*(1+k))+ ...
  78000.*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-225000).*h.^3.*k.*log(1+( ...
  -1).*h.*(1+k))+618000.*h.^4.*k.*log(1+(-1).*h.*(1+k))+304500.* ...
  h.^5.*k.*log(1+(-1).*h.*(1+k))+162000.*h.^2.*i.*k.*log(1+(-1).*h.* ...
  (1+k))+324000.*h.^3.*i.*k.*log(1+(-1).*h.*(1+k))+648000.*h.^4.*i.* ...
  k.*log(1+(-1).*h.*(1+k))+1296000.*h.^5.*i.*k.*log(1+(-1).*h.*(1+k) ...
  )+81000.*h.^3.*i.^2.*k.*log(1+(-1).*h.*(1+k))+324000.*h.^4.*i.^2.* ...
  k.*log(1+(-1).*h.*(1+k))+972000.*h.^5.*i.^2.*k.*log(1+(-1).*h.*(1+ ...
  k))+54000.*h.^4.*i.^3.*k.*log(1+(-1).*h.*(1+k))+324000.*h.^5.* ...
  i.^3.*k.*log(1+(-1).*h.*(1+k))+40500.*h.^5.*i.^4.*k.*log(1+(-1).* ...
  h.*(1+k))+(-123000).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k))+(-387000).* ...
  h.^3.*k.^2.*log(1+(-1).*h.*(1+k))+(-45000).*h.^4.*k.^2.*log(1+(-1) ...
  .*h.*(1+k))+(-525000).*h.^5.*k.^2.*log(1+(-1).*h.*(1+k))+(-129000) ...
  .*h.^3.*k.^3.*log(1+(-1).*h.*(1+k))+(-138000).*h.^4.*k.^3.*log(1+( ...
  -1).*h.*(1+k))+(-417000).*h.^5.*k.^3.*log(1+(-1).*h.*(1+k))+( ...
  -34500).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k))+(-181500).*h.^5.*k.^4.* ...
  log(1+(-1).*h.*(1+k))+(-36300).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k))+ ...
  (-12600).*log(1+(-1).*h.*(1+k)).^2+63000.*h.*log(1+(-1).*h.*(1+k)) ...
  .^2+(-126000).*h.^2.*log(1+(-1).*h.*(1+k)).^2+126000.*h.^3.*log(1+ ...
  (-1).*h.*(1+k)).^2+(-468000).*h.^4.*log(1+(-1).*h.*(1+k)).^2+( ...
  -532800).*h.^5.*log(1+(-1).*h.*(1+k)).^2+(-864000).*h.^4.*i.*log( ...
  1+(-1).*h.*(1+k)).^2+(-864000).*h.^5.*i.*log(1+(-1).*h.*(1+k)).^2+ ...
  (-648000).*h.^4.*i.^2.*log(1+(-1).*h.*(1+k)).^2+(-216000).*h.^5.* ...
  i.^2.*log(1+(-1).*h.*(1+k)).^2+(-216000).*h.^4.*i.^3.*log(1+(-1).* ...
  h.*(1+k)).^2+216000.*h.^5.*i.^3.*log(1+(-1).*h.*(1+k)).^2+(-27000) ...
  .*h.^4.*i.^4.*log(1+(-1).*h.*(1+k)).^2+135000.*h.^5.*i.^4.*log(1+( ...
  -1).*h.*(1+k)).^2+21600.*h.^5.*i.^5.*log(1+(-1).*h.*(1+k)).^2+ ...
  63000.*h.*k.*log(1+(-1).*h.*(1+k)).^2+(-252000).*h.^2.*k.*log(1+( ...
  -1).*h.*(1+k)).^2+378000.*h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+( ...
  -144000).*h.^4.*k.*log(1+(-1).*h.*(1+k)).^2+(-936000).*h.^5.*k.* ...
  log(1+(-1).*h.*(1+k)).^2+(-2592000).*h.^5.*i.*k.*log(1+(-1).*h.*( ...
  1+k)).^2+(-1944000).*h.^5.*i.^2.*k.*log(1+(-1).*h.*(1+k)).^2+( ...
  -648000).*h.^5.*i.^3.*k.*log(1+(-1).*h.*(1+k)).^2+(-81000).*h.^5.* ...
  i.^4.*k.*log(1+(-1).*h.*(1+k)).^2+(-126000).*h.^2.*k.^2.*log(1+( ...
  -1).*h.*(1+k)).^2+378000.*h.^3.*k.^2.*log(1+(-1).*h.*(1+k)).^2+( ...
  -216000).*h.^4.*k.^2.*log(1+(-1).*h.*(1+k)).^2+720000.*h.^5.* ...
  k.^2.*log(1+(-1).*h.*(1+k)).^2+126000.*h.^3.*k.^3.*log(1+(-1).*h.* ...
  (1+k)).^2+(-144000).*h.^4.*k.^3.*log(1+(-1).*h.*(1+k)).^2+720000.* ...
  h.^5.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-36000).*h.^4.*k.^4.*log(1+( ...
  -1).*h.*(1+k)).^2+360000.*h.^5.*k.^4.*log(1+(-1).*h.*(1+k)).^2+ ...
  72000.*h.^5.*k.^5.*log(1+(-1).*h.*(1+k)).^2+3000.*(1+h+(-1).*h.*k) ...
  .^2.*log(1+h+(-1).*h.*k).*((-1).*h.*(6+(-3).*h.*(5+4.*k)+h.^2.*(5+ ...
  15.*k+6.*k.^2))+6.*((-1)+h+h.*k).^3.*log(1+(-1).*h.*(1+k)))+(-120) ...
  .*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*(37+(-275).*h+625.*h.^2+( ...
  -925).*h.^3+(-111).*h.*k+550.*h.^2.*k+(-625).*h.^3.*k+111.*h.^2.* ...
  k.^2+(-275).*h.^3.*k.^2+(-37).*h.^3.*k.^3+150.*((-1)+h.*((-1)+k)) ...
  .^2.*((-1)+h.*(3+k)).*log(1+h+(-1).*h.*k)+300.*((-1)+h+h.*k).^3.* ...
  log(1+(-1).*h.*(1+k))));
                
            elseif ((j == (i+1)) && (k == (i+2)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/108000).*c.*h.^(-3).*W.^(-1).*z.*(900.*(7+(-5).*h.*((-2)+7.*k) ...
  +10.*h.^3.*j.*(2.*j.^2+3.*j.*((-2)+k)+(-12).*((-1)+k).*k)+(-10).* ...
  h.^2.*(3.*j.^2+(-6).*j.*k+(-4).*((-1)+k).*k)+h.^5.*((-12).*((-1)+ ...
  k).^5+(-40).*j.^3.*((-1)+k).*k+15.*j.^4.*((-2)+3.*k))+5.*h.^4.* ...
  j.^2.*(3.*j.^2+24.*((-1)+k).*k+(-4).*j.*((-4)+5.*k))).*log(1+(-1) ...
  .*h.*j).^2+900.*((-1)+h.*k).^4.*((-7)+h.*((-10)+7.*k)).*log(1+(-1) ...
  .*h.*k).^2+(-60).*((-1)+h.*k).^3.*log(1+(-1).*h.*k).*(37+(-125).* ...
  h+(-225).*h.^2+(-74).*h.*k+125.*h.^2.*k+37.*h.^2.*k.^2+150.*(1+h+( ...
  -1).*h.*k).^2.*log(1+h+(-1).*h.*k))+60.*log(1+(-1).*h.*j).*((-37)+ ...
  (-235).*h+405.*h.^2+(-120).*h.^3+90.*h.^4+(-72).*h.^5+(-150).*h.* ...
  j+300.*h.^2.*j+(-75).*h.^2.*j.^2+(-300).*h.^3.*j.^2+(-675).*h.^4.* ...
  j.^2+(-650).*h.^3.*j.^3+(-800).*h.^4.*j.^3+450.*h.^5.*j.^3+675.* ...
  h.^5.*j.^4+90.*h.^5.*j.^5+335.*h.*k+(-1160).*h.^2.*k+(-315).* ...
  h.^3.*k+(-360).*h.^4.*k+360.*h.^5.*k+(-1050).*h.^2.*j.*k+(-300).* ...
  h.^3.*j.*k+1350.*h.^4.*j.*k+1275.*h.^3.*j.^2.*k+3000.*h.^4.*j.^2.* ...
  k+(-675).*h.^5.*j.^2.*k+700.*h.^4.*j.^3.*k+(-1900).*h.^5.*j.^3.*k+ ...
  (-900).*h.^5.*j.^4.*k+755.*h.^2.*k.^2+990.*h.^3.*k.^2+540.*h.^4.* ...
  k.^2+(-720).*h.^5.*k.^2+300.*h.^3.*j.*k.^2+(-2700).*h.^4.*j.*k.^2+ ...
  (-2325).*h.^4.*j.^2.*k.^2+1350.*h.^5.*j.^2.*k.^2+1450.*h.^5.* ...
  j.^3.*k.^2+(-555).*h.^3.*k.^3+(-360).*h.^4.*k.^3+720.*h.^5.*k.^3+ ...
  1350.*h.^4.*j.*k.^3+(-675).*h.^5.*j.^2.*k.^3+90.*h.^4.*k.^4+(-360) ...
  .*h.^5.*k.^4+72.*h.^5.*k.^5+(-150).*((-1)+h.*j).^2.*(1+2.*h.*j+( ...
  -3).*h.*k).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+h.*(49320+( ...
  -13860).*h+5640.*h.^2+(-2430).*h.^3+864.*h.^4+47100.*j+7500.*h.*j+ ...
  13500.*h.^2.*j+19050.*h.*j.^2+12750.*h.^2.*j.^2+6750.*h.^3.*j.^2+ ...
  11200.*h.^2.*j.^3+2500.*h.^3.*j.^3+(-9000).*h.^4.*j.^3+(-1350).* ...
  h.^3.*j.^4+(-10125).*h.^4.*j.^4+(-1080).*h.^4.*j.^5+(-47100).*k+( ...
  -87780).*h.*k+(-246420).*h.^2.*k+9720.*h.^3.*k+(-4320).*h.^4.*k+( ...
  -109500).*h.*j.*k+(-264000).*h.^2.*j.*k+(-40500).*h.^3.*j.*k+( ...
  -32250).*h.^2.*j.^2.*k+(-33000).*h.^3.*j.^2.*k+20250.*h.^4.*j.^2.* ...
  k+4000.*h.^3.*j.^3.*k+38000.*h.^4.*j.^3.*k+13500.*h.^4.*j.^4.*k+ ...
  90450.*h.*k.^2+484170.*h.^2.*k.^2+19170.*h.^3.*k.^2+8640.*h.^4.* ...
  k.^2+250500.*h.^2.*j.*k.^2+81000.*h.^3.*j.*k.^2+26250.*h.^3.* ...
  j.^2.*k.^2+(-40500).*h.^4.*j.^2.*k.^2+(-29000).*h.^4.*j.^3.*k.^2+( ...
  -229450).*h.^2.*k.^3+(-40780).*h.^3.*k.^3+(-19890).*h.^4.*k.^3+( ...
  -40500).*h.^3.*j.*k.^3+20250.*h.^4.*j.^2.*k.^3+11600.*h.^3.*k.^4+ ...
  16945.*h.^4.*k.^4+(-3670).*h.^4.*k.^5+1500.*(j+(-1).*k).*(1+h+(-1) ...
  .*h.*k).^2.*((-6)+(-3).*h.*(j+(-5).*k)+h.^2.*(4.*j.^2+(-5).*j.*k+( ...
  -5).*k.^2)).*log(1+h+(-1).*h.*k)));
                
            elseif ((j == (i+2)) && (k <= i) && (j < n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/12).*c.*h.^(-3).*W.^(-1).*z.*((-5).*h.^2+5.*h.^3.*j+((-2)+6.* ...
  h.*j+(-6).*h.^2.*j.^2+h.^3.*j.^3).*log(1+(-1).*h.*j)+(-1).*((-1)+ ...
  h.*((-1)+j)).^3.*log(1+h+(-1).*h.*j)+(-1).*h.^3.*j.^3.*log(((-1)+ ...
  h.*j).^(-1).*((-1)+h+h.*j))+log(1+(-1).*h.*(1+j))+(-3).*h.*log(1+( ...
  -1).*h.*(1+j))+3.*h.^2.*log(1+(-1).*h.*(1+j))+(-1).*h.^3.*log(1+( ...
  -1).*h.*(1+j))+(-3).*h.*j.*log(1+(-1).*h.*(1+j))+6.*h.^2.*j.*log( ...
  1+(-1).*h.*(1+j))+(-3).*h.^3.*j.*log(1+(-1).*h.*(1+j))+3.*h.^2.* ...
  j.^2.*log(1+(-1).*h.*(1+j))+(-3).*h.^3.*j.^2.*log(1+(-1).*h.*(1+j) ...
  )).*(3.*h.^2+2.*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(-1).*(1+h+(-1) ...
  .*h.*k).^2.*log(1+h+(-1).*h.*k)+(-1).*log(1+(-1).*h.*(1+k))+2.*h.* ...
  log(1+(-1).*h.*(1+k))+(-1).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.*k.* ...
  log(1+(-1).*h.*(1+k))+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-1).* ...
  h.^2.*k.^2.*log(1+(-1).*h.*(1+k)));

            elseif ((j == (i+2)) && (k <= i) && (j == n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/12).*c.*W.^(-1).*z.*((-5)+log(256)+6.*log(h)).*(3.*h.^2+2.*(( ...
  -1)+h.*k).^2.*log(1+(-1).*h.*k)+(-1).*(1+h+(-1).*h.*k).^2.*log(1+ ...
  h+(-1).*h.*k)+(-1).*log(1+(-1).*h.*(1+k))+2.*h.*log(1+(-1).*h.*(1+ ...
  k))+(-1).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.*k.*log(1+(-1).*h.*(1+ ...
  k))+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*k.^2.*log(1+( ...
  -1).*h.*(1+k)));
                
            elseif ((j == (i+2)) && (k == (i+1)) && (j < n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/144).*c.*h.^(-3).*W.^(-1).*z.*((-36).*((37/450).*h+(77/900).* ...
  h.^2+(2069/2700).*h.^3+(1303/2700).*h.^4+(-1909/3000).*h.^5+( ...
  -74/225).*h.^2.*k+(-77/300).*h.^3.*k+(-2069/1350).*h.^4.*k+( ...
  -1303/2700).*h.^5.*k+(37/75).*h.^3.*k.^2+(77/300).*h.^4.*k.^2+( ...
  2069/2700).*h.^5.*k.^2+(-74/225).*h.^4.*k.^3+(-77/900).*h.^5.* ...
  k.^3+(37/450).*h.^5.*k.^4+(1/30).*((-1)+h.*k).^4.*((-13)+h.*((-10) ...
  +13.*k)).*log(1+(-1).*h.*k).^2+(1/2).*h.*k.*log(((-1)+h.*k).^(-2)) ...
  +(-1).*h.^2.*k.*log(((-1)+h.*k).^(-2))+(-1).*h.^2.*k.^2.*log(((-1) ...
  +h.*k).^(-2))+(-1).*h.^3.*k.^2.*log(((-1)+h.*k).^(-2))+(-3/2).* ...
  h.^3.*k.^3.*log(((-1)+h.*k).^(-2))+2.*h.^4.*k.^3.*log(((-1)+h.*k) ...
  .^(-2))+2.*h.^4.*k.^4.*log(((-1)+h.*k).^(-2))+(37/450).*log(1+(-1) ...
  .*h.*(1+k))+(-17/90).*h.*log(1+(-1).*h.*(1+k))+(14/15).*h.^2.*log( ...
  1+(-1).*h.*(1+k))+(23/45).*h.^3.*log(1+(-1).*h.*(1+k))+(-313/90).* ...
  h.^4.*log(1+(-1).*h.*(1+k))+(107/50).*h.^5.*log(1+(-1).*h.*(1+k))+ ...
  (-37/90).*h.*k.*log(1+(-1).*h.*(1+k))+(34/45).*h.^2.*k.*log(1+(-1) ...
  .*h.*(1+k))+(-14/5).*h.^3.*k.*log(1+(-1).*h.*(1+k))+(-46/45).* ...
  h.^4.*k.*log(1+(-1).*h.*(1+k))+(313/90).*h.^5.*k.*log(1+(-1).*h.*( ...
  1+k))+(37/45).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k))+(-17/15).*h.^3.* ...
  k.^2.*log(1+(-1).*h.*(1+k))+(14/5).*h.^4.*k.^2.*log(1+(-1).*h.*(1+ ...
  k))+(23/45).*h.^5.*k.^2.*log(1+(-1).*h.*(1+k))+(-37/45).*h.^3.* ...
  k.^3.*log(1+(-1).*h.*(1+k))+(34/45).*h.^4.*k.^3.*log(1+(-1).*h.*( ...
  1+k))+(-14/15).*h.^5.*k.^3.*log(1+(-1).*h.*(1+k))+(37/90).*h.^4.* ...
  k.^4.*log(1+(-1).*h.*(1+k))+(-17/90).*h.^5.*k.^4.*log(1+(-1).*h.*( ...
  1+k))+(-37/450).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k))+(-7/30).*log(1+ ...
  (-1).*h.*(1+k)).^2+(1/3).*h.*log(1+(-1).*h.*(1+k)).^2+h.^2.*log(1+ ...
  (-1).*h.*(1+k)).^2+(-8/3).*h.^3.*log(1+(-1).*h.*(1+k)).^2+(13/6).* ...
  h.^4.*log(1+(-1).*h.*(1+k)).^2+(-3/5).*h.^5.*log(1+(-1).*h.*(1+k)) ...
  .^2+(7/6).*h.*k.*log(1+(-1).*h.*(1+k)).^2+(-4/3).*h.^2.*k.*log(1+( ...
  -1).*h.*(1+k)).^2+(-3).*h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+(16/3).* ...
  h.^4.*k.*log(1+(-1).*h.*(1+k)).^2+(-13/6).*h.^5.*k.*log(1+(-1).* ...
  h.*(1+k)).^2+(-7/3).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)).^2+2.* ...
  h.^3.*k.^2.*log(1+(-1).*h.*(1+k)).^2+3.*h.^4.*k.^2.*log(1+(-1).* ...
  h.*(1+k)).^2+(-8/3).*h.^5.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(7/3).* ...
  h.^3.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-4/3).*h.^4.*k.^3.*log(1+( ...
  -1).*h.*(1+k)).^2+(-1).*h.^5.*k.^3.*log(1+(-1).*h.*(1+k)).^2+( ...
  -7/6).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k)).^2+(1/3).*h.^5.*k.^4.* ...
  log(1+(-1).*h.*(1+k)).^2+(7/30).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k)) ...
  .^2+(1/18).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k).*(h.*((-6)+ ...
  3.*h.*((-1)+4.*k)+h.^2.*(4+3.*k+(-6).*k.^2))+6.*((-1)+h.*((-2)+k)) ...
  .*((-1)+h+h.*k).^2.*log(1+(-1).*h.*(1+k)))+(-1/450).*((-1)+h.*k).* ...
  log(1+(-1).*h.*k).*((-37)+175.*h+(-75).*h.^2+(-200).*h.^3+h.*(598+ ...
  (-1425).*h+150.*h.^2+200.*h.^3).*k+(-3).*h.^2.*(224+425.*h+25.* ...
  h.^2).*k.^2+(-7).*h.^3.*(236+25.*h).*k.^3+(-37).*h.^4.*k.^4+150.*( ...
  1+h+(-2).*h.*k+h.^2.*((-1)+k).*k).^2.*log(1+h+(-1).*h.*k)+300.*(( ...
  -1)+h+h.*k).^2.*(1+(-2).*h.*((-1)+k)+h.^2.*((-2)+k).*k).*log(1+( ...
  -1).*h.*(1+k))))+(h.*(2+h.*(3+(-2).*k))+h.*((-2)+h.*(3+2.*k))+2.*( ...
  (-1)+h.*((-2)+k)).*((-1)+h.*k).*log(1+(-1).*h.*k)+2.*((-1)+h.*k).* ...
  ((-1)+h.*(2+k)).*log(1+(-1).*h.*k)+(-2).*(1+h+(-1).*h.*k).^2.*log( ...
  1+h+(-1).*h.*k)+(-2).*((-1)+h+h.*k).^2.*log(1+(-1).*h.*(1+k))).*( ...
  h.*(6+(-3).*h.*(9+4.*k)+h.^2.*(26+27.*k+6.*k.^2))+6.*((-1)+h+h.*k) ...
  .^2.*((-1)+h.*(4+k)).*log(1+(-1).*h.*(1+k))+(-6).*((-1)+h.*(2+k)) ...
  .^3.*log(1+(-1).*h.*(2+k))));
                
            elseif ((j == (i+2)) && (k == (i+1)) && (j == n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/108000).*c.*(2+k).^(-2).*W.^(-1).*z.*((-163639)+(-12960).*log( ...
  2)+518400.*log(2).^2+351000.*log(3)+(-648000).*log(2).*log(3)+ ...
  6000.*log((19683/256))+(-28800).*log(h).^2+3000.*((-31)+24.*log(2) ...
  +6.*log((19683/256))).*log(2+k)+60.*log(h).*(3247+2880.*log(2)+( ...
  -5400).*log(3)+1200.*log(2+k)));

            elseif ((j == (i+2)) && (k == (i+2)) && (j < n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/216000).*c.*h.^(-3).*W.^(-1).*z.*(h.*(4440+15.*h.*((-26608)+ ...
  60216.*k+(-23925).*k.^2+25.*i.*((-542)+957.*k))+(-5).*h.^2.*(( ...
  -128576)+318228.*k+(-240003).*k.^2+55350.*k.^3+75.*i.^2.*((-218)+ ...
  255.*k)+(-75).*i.*(1314+(-2381).*k+993.*k.^2))+h.^4.*((-5612)+( ...
  -79940).*k+348880.*k.^2+(-459630).*k.^3+254190.*k.^4+(-50625).* ...
  k.^5+13500.*i.^3.*((-2)+3.*k)+3375.*i.^4.*((-2)+3.*k)+20250.* ...
  i.^2.*((-4)+9.*k+(-6).*k.^2+2.*k.^3)+13500.*i.*((-8)+21.*k+(-18).* ...
  k.^2+6.*k.^3))+20.*h.^3.*(4597+(-13738).*k+12807.*k.^2+(-1863).* ...
  k.^3+(-900).*k.^4+525.*i.^3.*((-2)+3.*k)+225.*i.^2.*(1+(-9).*k+ ...
  15.*k.^2)+(-225).*i.*((-34)+93.*k+(-84).*k.^2+18.*k.^3)))+1800.*(( ...
  -1)+h.*k).^3.*(7+(-7).*h.*((-5)+2.*k)+h.^2.*(40+(-35).*k+7.*k.^2)) ...
  .*log(1+(-1).*h.*k).^2+(-30).*(148+20.*h.*(187+90.*i+(-127).*k)+ ...
  5.*h.^2.*((-1024)+180.*i.^2+2168.*k+(-649).*k.^2+15.*i.*((-2)+51.* ...
  k))+20.*h.^4.*((-208)+532.*k+(-408).*k.^2+122.*k.^3+(-8).*k.^4+ ...
  30.*i.^3.*((-2)+3.*k)+(-45).*i.^2.*(5+(-8).*k+k.^2)+(-90).*i.*(3+( ...
  -5).*k+k.^2))+(-5).*h.^3.*(824+(-1512).*k+507.*k.^2+116.*k.^3+15.* ...
  i.^2.*((-14)+15.*k)+(-15).*i.*(18+(-23).*k+3.*k.^2))+2.*h.^5.*( ...
  2524+(-13970).*k+28840.*k.^2+(-28190).*k.^3+13570.*k.^4+(-2549).* ...
  k.^5+900.*i.^3.*((-2)+3.*k)+225.*i.^4.*((-2)+3.*k)+450.*i.^2.*(( ...
  -7)+12.*k+(-3).*k.^2+k.^3)+450.*i.*((-3)+12.*k.^2+(-10).*k.^3+3.* ...
  k.^4))).*log(1+h+(-1).*h.*k)+5400.*((-1)+(-5).*h.*(5+2.*i+(-3).*k) ...
  +10.*h.^2.*(5+2.*i+(-3).*k).*((-1)+k)+10.*h.^3.*((-1)+k).^3+(-5).* ...
  h.^4.*(7+4.*i+(-3).*k).*((-1)+k).^3+h.^5.*(19+(-125).*k+270.*k.^2+ ...
  (-260).*k.^3+125.*k.^4+(-24).*k.^5+30.*i.^2.*((-2)+3.*k)+20.* ...
  i.^3.*((-2)+3.*k)+5.*i.^4.*((-2)+3.*k)+10.*i.*((-3)+2.*k+6.*k.^2+( ...
  -4).*k.^3+k.^4))).*log(1+h+(-1).*h.*k).^2+(-120).*((-1)+h.*k).^2.* ...
  log(1+(-1).*h.*k).*((-37)+25.*h+575.*h.^2+675.*h.^3+111.*h.*k+( ...
  -50).*h.^2.*k+(-575).*h.^3.*k+(-111).*h.^2.*k.^2+25.*h.^3.*k.^2+ ...
  37.*h.^3.*k.^3+150.*((-1)+h.*((-3)+k)).*(1+h+(-1).*h.*k).^2.*log( ...
  1+h+(-1).*h.*k))+54000.*((37/450).*h+(-41/300).*h.^2+(1919/2700).* ...
  h.^3+(-5347/2700).*h.^4+(9847/13500).*h.^5+(-74/225).*h.^2.*k+( ...
  41/100).*h.^3.*k+(-1919/1350).*h.^4.*k+(5347/2700).*h.^5.*k+( ...
  37/75).*h.^3.*k.^2+(-41/100).*h.^4.*k.^2+(1919/2700).*h.^5.*k.^2+( ...
  -74/225).*h.^4.*k.^3+(41/300).*h.^5.*k.^3+(37/450).*h.^5.*k.^4+( ...
  1/30).*((-1)+h.*k).^3.*(13+(-1).*h.*(25+26.*k)+h.^2.*((-40)+25.*k+ ...
  13.*k.^2)).*log(1+(-1).*h.*k).^2+(1/2).*h.*k.*log(((-1)+h.*k).^( ...
  -2))+(-1/2).*h.^2.*k.*log(((-1)+h.*k).^(-2))+(-2).*h.^3.*k.*log((( ...
  -1)+h.*k).^(-2))+(-1).*h.^2.*k.^2.*log(((-1)+h.*k).^(-2))+(-7/2).* ...
  h.^3.*k.^2.*log(((-1)+h.*k).^(-2))+2.*h.^4.*k.^2.*log(((-1)+h.*k) ...
  .^(-2))+(-3/2).*h.^3.*k.^3.*log(((-1)+h.*k).^(-2))+4.*h.^4.*k.^3.* ...
  log(((-1)+h.*k).^(-2))+2.*h.^4.*k.^4.*log(((-1)+h.*k).^(-2))+( ...
  -1/2).*h.*k.*log(((-1)+h+h.*k).^(-2))+h.^2.*k.*log(((-1)+h+h.*k) ...
  .^(-2))+(3/2).*h.^3.*k.*log(((-1)+h+h.*k).^(-2))+(-2).*h.^4.*k.* ...
  log(((-1)+h+h.*k).^(-2))+h.^2.*k.^2.*log(((-1)+h+h.*k).^(-2))+3.* ...
  h.^3.*k.^2.*log(((-1)+h+h.*k).^(-2))+(-6).*h.^4.*k.^2.*log(((-1)+ ...
  h+h.*k).^(-2))+(3/2).*h.^3.*k.^3.*log(((-1)+h+h.*k).^(-2))+(-6).* ...
  h.^4.*k.^3.*log(((-1)+h+h.*k).^(-2))+(-2).*h.^4.*k.^4.*log(((-1)+ ...
  h+h.*k).^(-2))+(37/450).*log(1+(-1).*h.*(1+k))+(-37/90).*h.*log(1+ ...
  (-1).*h.*(1+k))+(82/45).*h.^2.*log(1+(-1).*h.*(1+k))+(-172/45).* ...
  h.^3.*log(1+(-1).*h.*(1+k))+(307/90).*h.^4.*log(1+(-1).*h.*(1+k))+ ...
  (-487/450).*h.^5.*log(1+(-1).*h.*(1+k))+(-127/90).*h.*k.*log(1+( ...
  -1).*h.*(1+k))+(164/45).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-37/15).* ...
  h.^3.*k.*log(1+(-1).*h.*(1+k))+(164/45).*h.^4.*k.*log(1+(-1).*h.*( ...
  1+k))+(-307/90).*h.^5.*k.*log(1+(-1).*h.*(1+k))+(127/45).*h.^2.* ...
  k.^2.*log(1+(-1).*h.*(1+k))+(53/15).*h.^3.*k.^2.*log(1+(-1).*h.*( ...
  1+k))+(-98/15).*h.^4.*k.^2.*log(1+(-1).*h.*(1+k))+(-172/45).* ...
  h.^5.*k.^2.*log(1+(-1).*h.*(1+k))+(98/45).*h.^3.*k.^3.*log(1+(-1) ...
  .*h.*(1+k))+(-466/45).*h.^4.*k.^3.*log(1+(-1).*h.*(1+k))+(-82/45) ...
  .*h.^5.*k.^3.*log(1+(-1).*h.*(1+k))+(-323/90).*h.^4.*k.^4.*log(1+( ...
  -1).*h.*(1+k))+(-37/90).*h.^5.*k.^4.*log(1+(-1).*h.*(1+k))+( ...
  -37/450).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k))+(-7/30).*log(1+(-1).* ...
  h.*(1+k)).^2+(7/6).*h.*log(1+(-1).*h.*(1+k)).^2+(-7/3).*h.^2.*log( ...
  1+(-1).*h.*(1+k)).^2+(7/3).*h.^3.*log(1+(-1).*h.*(1+k)).^2+(-7/6) ...
  .*h.^4.*log(1+(-1).*h.*(1+k)).^2+(7/30).*h.^5.*log(1+(-1).*h.*(1+ ...
  k)).^2+(7/6).*h.*k.*log(1+(-1).*h.*(1+k)).^2+(-14/3).*h.^2.*k.* ...
  log(1+(-1).*h.*(1+k)).^2+7.*h.^3.*k.*log(1+(-1).*h.*(1+k)).^2+( ...
  -14/3).*h.^4.*k.*log(1+(-1).*h.*(1+k)).^2+(7/6).*h.^5.*k.*log(1+( ...
  -1).*h.*(1+k)).^2+(-7/3).*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)).^2+7.* ...
  h.^3.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(-7).*h.^4.*k.^2.*log(1+(-1) ...
  .*h.*(1+k)).^2+(7/3).*h.^5.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(7/3).* ...
  h.^3.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-14/3).*h.^4.*k.^3.*log(1+( ...
  -1).*h.*(1+k)).^2+(7/3).*h.^5.*k.^3.*log(1+(-1).*h.*(1+k)).^2+( ...
  -7/6).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k)).^2+(7/6).*h.^5.*k.^4.* ...
  log(1+(-1).*h.*(1+k)).^2+(7/30).*h.^5.*k.^5.*log(1+(-1).*h.*(1+k)) ...
  .^2+(1/18).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k).*((-1).*h.*( ...
  6+(-3).*h.*(5+4.*k)+h.^2.*(5+15.*k+6.*k.^2))+6.*((-1)+h+h.*k).^3.* ...
  log(1+(-1).*h.*(1+k)))+(-1/450).*((-1)+h.*k).*log(1+(-1).*h.*k).*( ...
  (-37)+275.*h+(-625).*h.^2+925.*h.^3+150.*(1+h+(-1).*h.*k).^2.*(1+ ...
  h.^2.*k.*(3+k)+(-1).*h.*(3+2.*k)).*log(1+h+(-1).*h.*k)+300.*log(1+ ...
  (-1).*h.*(1+k))+(-900).*h.*log(1+(-1).*h.*(1+k))+900.*h.^2.*log(1+ ...
  (-1).*h.*(1+k))+(-300).*h.^3.*log(1+(-1).*h.*(1+k))+h.^4.*k.^4.*(( ...
  -37)+300.*log(1+(-1).*h.*(1+k)))+h.*k.*(598+(-1275).*h+(-550).* ...
  h.^2+(-925).*h.^3+300.*((-4)+h).*((-1)+h).^2.*log(1+(-1).*h.*(1+k) ...
  ))+h.^3.*k.^3.*((-1652)+(-275).*h+300.*((-4)+3.*h).*log(1+(-1).* ...
  h.*(1+k)))+h.^2.*k.^2.*((-672)+(-2775).*h+(-625).*h.^2+900.*(2+( ...
  -3).*h+h.^2).*log(1+(-1).*h.*(1+k))))));

            elseif ((j == (i+2)) && (k == (i+2)) && (j == n))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/13500).*c.*(1+k).^(-2).*W.^(-1).*z.*(4349+(-13620).*log(2)+ ...
  10800.*log(2).^2+(-1350).*log(h).^2+15.*log(h).*((-1669)+3000.* ...
  log(2)+(-1500).*log(1+k))+15.*((-1111)+2160.*log(2)).*log(1+k)+( ...
  -15975).*log(1+k).^2);

            elseif ((j == (i+2)) && (k == (i+3)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/108000).*c.*h.^(-3).*W.^(-1).*z.*(900.*(7+(-5).*h.*((-2)+7.*k) ...
  +10.*h.^3.*j.*(2.*j.^2+3.*j.*((-2)+k)+(-12).*((-1)+k).*k)+(-10).* ...
  h.^2.*(3.*j.^2+(-6).*j.*k+(-4).*((-1)+k).*k)+h.^5.*((-12).*((-1)+ ...
  k).^5+(-40).*j.^3.*((-1)+k).*k+15.*j.^4.*((-2)+3.*k))+5.*h.^4.* ...
  j.^2.*(3.*j.^2+24.*((-1)+k).*k+(-4).*j.*((-4)+5.*k))).*log(1+(-1) ...
  .*h.*j).^2+900.*((-1)+h.*k).^4.*((-7)+h.*((-10)+7.*k)).*log(1+(-1) ...
  .*h.*k).^2+(-60).*((-1)+h.*k).^3.*log(1+(-1).*h.*k).*(37+(-125).* ...
  h+(-225).*h.^2+(-74).*h.*k+125.*h.^2.*k+37.*h.^2.*k.^2+150.*(1+h+( ...
  -1).*h.*k).^2.*log(1+h+(-1).*h.*k))+60.*log(1+(-1).*h.*j).*((-37)+ ...
  (-235).*h+405.*h.^2+(-120).*h.^3+90.*h.^4+(-72).*h.^5+(-150).*h.* ...
  j+300.*h.^2.*j+(-75).*h.^2.*j.^2+(-300).*h.^3.*j.^2+(-675).*h.^4.* ...
  j.^2+(-650).*h.^3.*j.^3+(-800).*h.^4.*j.^3+450.*h.^5.*j.^3+675.* ...
  h.^5.*j.^4+90.*h.^5.*j.^5+335.*h.*k+(-1160).*h.^2.*k+(-315).* ...
  h.^3.*k+(-360).*h.^4.*k+360.*h.^5.*k+(-1050).*h.^2.*j.*k+(-300).* ...
  h.^3.*j.*k+1350.*h.^4.*j.*k+1275.*h.^3.*j.^2.*k+3000.*h.^4.*j.^2.* ...
  k+(-675).*h.^5.*j.^2.*k+700.*h.^4.*j.^3.*k+(-1900).*h.^5.*j.^3.*k+ ...
  (-900).*h.^5.*j.^4.*k+755.*h.^2.*k.^2+990.*h.^3.*k.^2+540.*h.^4.* ...
  k.^2+(-720).*h.^5.*k.^2+300.*h.^3.*j.*k.^2+(-2700).*h.^4.*j.*k.^2+ ...
  (-2325).*h.^4.*j.^2.*k.^2+1350.*h.^5.*j.^2.*k.^2+1450.*h.^5.* ...
  j.^3.*k.^2+(-555).*h.^3.*k.^3+(-360).*h.^4.*k.^3+720.*h.^5.*k.^3+ ...
  1350.*h.^4.*j.*k.^3+(-675).*h.^5.*j.^2.*k.^3+90.*h.^4.*k.^4+(-360) ...
  .*h.^5.*k.^4+72.*h.^5.*k.^5+(-150).*((-1)+h.*j).^2.*(1+2.*h.*j+( ...
  -3).*h.*k).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k))+h.*(49320+( ...
  -13860).*h+5640.*h.^2+(-2430).*h.^3+864.*h.^4+47100.*j+7500.*h.*j+ ...
  13500.*h.^2.*j+19050.*h.*j.^2+12750.*h.^2.*j.^2+6750.*h.^3.*j.^2+ ...
  11200.*h.^2.*j.^3+2500.*h.^3.*j.^3+(-9000).*h.^4.*j.^3+(-1350).* ...
  h.^3.*j.^4+(-10125).*h.^4.*j.^4+(-1080).*h.^4.*j.^5+(-47100).*k+( ...
  -87780).*h.*k+(-246420).*h.^2.*k+9720.*h.^3.*k+(-4320).*h.^4.*k+( ...
  -109500).*h.*j.*k+(-264000).*h.^2.*j.*k+(-40500).*h.^3.*j.*k+( ...
  -32250).*h.^2.*j.^2.*k+(-33000).*h.^3.*j.^2.*k+20250.*h.^4.*j.^2.* ...
  k+4000.*h.^3.*j.^3.*k+38000.*h.^4.*j.^3.*k+13500.*h.^4.*j.^4.*k+ ...
  90450.*h.*k.^2+484170.*h.^2.*k.^2+19170.*h.^3.*k.^2+8640.*h.^4.* ...
  k.^2+250500.*h.^2.*j.*k.^2+81000.*h.^3.*j.*k.^2+26250.*h.^3.* ...
  j.^2.*k.^2+(-40500).*h.^4.*j.^2.*k.^2+(-29000).*h.^4.*j.^3.*k.^2+( ...
  -229450).*h.^2.*k.^3+(-40780).*h.^3.*k.^3+(-19890).*h.^4.*k.^3+( ...
  -40500).*h.^3.*j.*k.^3+20250.*h.^4.*j.^2.*k.^3+11600.*h.^3.*k.^4+ ...
  16945.*h.^4.*k.^4+(-3670).*h.^4.*k.^5+1500.*(j+(-1).*k).*(1+h+(-1) ...
  .*h.*k).^2.*((-6)+(-3).*h.*(j+(-5).*k)+h.^2.*(4.*j.^2+(-5).*j.*k+( ...
  -5).*k.^2)).*log(1+h+(-1).*h.*k)));
                
            elseif ((j == (i + 3)) && (k <= (i+1)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/72).*c.*h.^(-3).*W.^(-1).*z.*((-1).*h.*(6+(-3).*h.*((-5)+4.*j)+ ...
  h.^2.*(5+(-15).*j+6.*j.^2))+6.*((-1)+h.*((-3)+j)).*((-1)+h.*j) ...
  .^2.*log(1+(-1).*h.*j)+(-6).*((-1)+h.*((-1)+j)).^3.*log(1+h+(-1).* ...
  h.*j)).*(3.*h.^2+2.*((-1)+h.*k).^2.*log(1+(-1).*h.*k)+(-1).*(1+h+( ...
  -1).*h.*k).^2.*log(1+h+(-1).*h.*k)+(-1).*log(1+(-1).*h.*(1+k))+2.* ...
  h.*log(1+(-1).*h.*(1+k))+(-1).*h.^2.*log(1+(-1).*h.*(1+k))+2.*h.* ...
  k.*log(1+(-1).*h.*(1+k))+(-2).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-1) ...
  .*h.^2.*k.^2.*log(1+(-1).*h.*(1+k)));
                
            elseif ((j == (i + 3)) && (k == (i + 2)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (-1/4).*c.*h.^(-3).*W.^(-1).*z.*((37/450).*h+(77/900).*h.^2+( ...
  2069/2700).*h.^3+(1303/2700).*h.^4+(-1909/3000).*h.^5+(-74/225).* ...
  h.^2.*k+(-77/300).*h.^3.*k+(-2069/1350).*h.^4.*k+(-1303/2700).* ...
  h.^5.*k+(37/75).*h.^3.*k.^2+(77/300).*h.^4.*k.^2+(2069/2700).* ...
  h.^5.*k.^2+(-74/225).*h.^4.*k.^3+(-77/900).*h.^5.*k.^3+(37/450).* ...
  h.^5.*k.^4+(1/30).*((-1)+h.*k).^4.*((-13)+h.*((-10)+13.*k)).*log( ...
  1+(-1).*h.*k).^2+(1/2).*h.*k.*log(((-1)+h.*k).^(-2))+(-1).*h.^2.* ...
  k.*log(((-1)+h.*k).^(-2))+(-1).*h.^2.*k.^2.*log(((-1)+h.*k).^(-2)) ...
  +(-1).*h.^3.*k.^2.*log(((-1)+h.*k).^(-2))+(-3/2).*h.^3.*k.^3.*log( ...
  ((-1)+h.*k).^(-2))+2.*h.^4.*k.^3.*log(((-1)+h.*k).^(-2))+2.*h.^4.* ...
  k.^4.*log(((-1)+h.*k).^(-2))+(1/4).*h.^4.*k.^4.*log(((-1)+h.*k).^( ...
  -1).*((-1)+h+h.*k))+(1/2).*h.^5.*k.^4.*log(((-1)+h.*k).^(-1).*(( ...
  -1)+h+h.*k))+(3/4).*h.^5.*k.^5.*log(((-1)+h.*k).^(-1).*((-1)+h+h.* ...
  k))+(37/450).*log(1+(-1).*h.*(1+k))+(-17/90).*h.*log(1+(-1).*h.*( ...
  1+k))+(14/15).*h.^2.*log(1+(-1).*h.*(1+k))+(23/45).*h.^3.*log(1+( ...
  -1).*h.*(1+k))+(-313/90).*h.^4.*log(1+(-1).*h.*(1+k))+(107/50).* ...
  h.^5.*log(1+(-1).*h.*(1+k))+(-37/90).*h.*k.*log(1+(-1).*h.*(1+k))+ ...
  (34/45).*h.^2.*k.*log(1+(-1).*h.*(1+k))+(-14/5).*h.^3.*k.*log(1+( ...
  -1).*h.*(1+k))+(-46/45).*h.^4.*k.*log(1+(-1).*h.*(1+k))+(313/90).* ...
  h.^5.*k.*log(1+(-1).*h.*(1+k))+(37/45).*h.^2.*k.^2.*log(1+(-1).* ...
  h.*(1+k))+(-17/15).*h.^3.*k.^2.*log(1+(-1).*h.*(1+k))+(14/5).* ...
  h.^4.*k.^2.*log(1+(-1).*h.*(1+k))+(23/45).*h.^5.*k.^2.*log(1+(-1) ...
  .*h.*(1+k))+(-37/45).*h.^3.*k.^3.*log(1+(-1).*h.*(1+k))+(34/45).* ...
  h.^4.*k.^3.*log(1+(-1).*h.*(1+k))+(-14/15).*h.^5.*k.^3.*log(1+(-1) ...
  .*h.*(1+k))+(29/180).*h.^4.*k.^4.*log(1+(-1).*h.*(1+k))+(-31/45).* ...
  h.^5.*k.^4.*log(1+(-1).*h.*(1+k))+(-749/900).*h.^5.*k.^5.*log(1+( ...
  -1).*h.*(1+k))+(-7/30).*log(1+(-1).*h.*(1+k)).^2+(1/3).*h.*log(1+( ...
  -1).*h.*(1+k)).^2+h.^2.*log(1+(-1).*h.*(1+k)).^2+(-8/3).*h.^3.* ...
  log(1+(-1).*h.*(1+k)).^2+(13/6).*h.^4.*log(1+(-1).*h.*(1+k)).^2+( ...
  -3/5).*h.^5.*log(1+(-1).*h.*(1+k)).^2+(7/6).*h.*k.*log(1+(-1).*h.* ...
  (1+k)).^2+(-4/3).*h.^2.*k.*log(1+(-1).*h.*(1+k)).^2+(-3).*h.^3.* ...
  k.*log(1+(-1).*h.*(1+k)).^2+(16/3).*h.^4.*k.*log(1+(-1).*h.*(1+k)) ...
  .^2+(-13/6).*h.^5.*k.*log(1+(-1).*h.*(1+k)).^2+(-7/3).*h.^2.* ...
  k.^2.*log(1+(-1).*h.*(1+k)).^2+2.*h.^3.*k.^2.*log(1+(-1).*h.*(1+k) ...
  ).^2+3.*h.^4.*k.^2.*log(1+(-1).*h.*(1+k)).^2+(-8/3).*h.^5.*k.^2.* ...
  log(1+(-1).*h.*(1+k)).^2+(7/3).*h.^3.*k.^3.*log(1+(-1).*h.*(1+k)) ...
  .^2+(-4/3).*h.^4.*k.^3.*log(1+(-1).*h.*(1+k)).^2+(-1).*h.^5.* ...
  k.^3.*log(1+(-1).*h.*(1+k)).^2+(-7/6).*h.^4.*k.^4.*log(1+(-1).*h.* ...
  (1+k)).^2+(1/3).*h.^5.*k.^4.*log(1+(-1).*h.*(1+k)).^2+(7/30).* ...
  h.^5.*k.^5.*log(1+(-1).*h.*(1+k)).^2+(1/18).*(1+h+(-1).*h.*k).^2.* ...
  log(1+h+(-1).*h.*k).*(h.*((-6)+3.*h.*((-1)+4.*k)+h.^2.*(4+3.*k+( ...
  -6).*k.^2))+6.*((-1)+h.*((-2)+k)).*((-1)+h+h.*k).^2.*log(1+(-1).* ...
  h.*(1+k)))+(-1/900).*log(1+(-1).*h.*k).*(74+(-350).*h+150.*h.^2+ ...
  400.*h.^3+300.*(1+h+(-1).*h.*k).^2.*((-1)+h.*k).^3.*log(1+h+(-1).* ...
  h.*k)+(-600).*log(1+(-1).*h.*(1+k))+1800.*h.^2.*log(1+(-1).*h.*(1+ ...
  k))+(-1200).*h.^3.*log(1+(-1).*h.*(1+k))+h.^5.*k.^5.*((-749)+600.* ...
  log(1+(-1).*h.*(1+k)))+(-5).*h.^4.*k.^4.*(691+160.*h+600.*log(1+( ...
  -1).*h.*(1+k)))+(-10).*h.^3.*k.^3.*((-196)+220.*h+15.*h.^2+60.*(( ...
  -10)+3.*h.^2).*log(1+(-1).*h.*(1+k)))+(-10).*h.^2.*k.^2.*((-254)+ ...
  30.*h+(-45).*h.^2+(-40).*h.^3+60.*(10+(-9).*h.^2+2.*h.^3).*log(1+( ...
  -1).*h.*(1+k)))+10.*h.*k.*((-127)+320.*h+(-45).*h.^2+(-80).*h.^3+ ...
  60.*(5+(-9).*h.^2+4.*h.^3).*log(1+(-1).*h.*(1+k)))));
                
            elseif ((j == (i + 3)) && (k == (i + 3)))
                index = index + 1;
                    rows(index) = k;
                    cols(index) = i + n * (j - 1);
                values(index) = (1/216000).*c.*h.^(-3).*W.^(-1).*z.*(h.*(60.*(5699+1875.*i+(-1875) ...
  .*k)+h.^4.*((-96737)+40500.*i.^2.*((-1)+k).^3+179935.*k+126130.* ...
  k.^2+(-432630).*k.^3+277815.*k.^4+(-50625).*k.^5+10125.*i.*((-1)+ ...
  k).^3.*(15+k))+30.*h.*((-19779)+975.*i.^2+31958.*k+(-8625).*k.^2+ ...
  150.*i.*((-25)+51.*k))+5.*h.^2.*(147401+2775.*i.^3+(-346203).*k+ ...
  276903.*k.^2+(-58125).*k.^3+450.*i.^2.*(22+15.*k)+900.*i.*(61+( ...
  -78).*k+54.*k.^2))+5.*h.^3.*(8325.*i.^3.*((-1)+k)+1350.*i.^2.*(( ...
  -27)+17.*k+10.*k.^2)+(-675).*i.*(45+81.*k+(-149).*k.^2+23.*k.^3)+( ...
  -2).*((-3269)+51551.*k+(-56889).*k.^2+4701.*k.^3+3150.*k.^4)))+ ...
  1800.*((-1)+h.*k).^3.*(7+(-7).*h.*((-5)+2.*k)+h.^2.*(40+(-35).*k+ ...
  7.*k.^2)).*log(1+(-1).*h.*k).^2+(-30).*(148+5.*h.*(2773+915.*i+( ...
  -1063).*k)+10.*h.^2.*((-1967)+135.*i.^2+3214.*k+(-737).*k.^2+30.* ...
  i.*((-7)+25.*k))+(-20).*h.^4.*((-1)+k).*((-493)+45.*i.^2.*((-1)+k) ...
  +849.*k+(-324).*k.^2+8.*k.^3+(-90).*i.*(3+(-4).*k+k.^2))+h.^5.*(( ...
  -1)+k).^2.*(7073+900.*i.^2.*((-1)+k)+(-21669).*k+19419.*k.^2+( ...
  -4423).*k.^3+225.*i.*((-1)+(-14).*k+15.*k.^2))+10.*h.^3.*(45.* ...
  i.^2.*((-1)+k)+15.*i.*((-7)+2.*k+5.*k.^2)+(-2).*(86+57.*k+(-297).* ...
  k.^2+134.*k.^3))).*log(1+h+(-1).*h.*k)+5400.*((-1)+(-5).*h.*(7+2.* ...
  i+(-3).*k)+10.*h.^2.*(7+2.*i+(-3).*k).*((-1)+k)+10.*h.^3.*((-1)+k) ...
  .^3+5.*h.^4.*(24.*i.^2+8.*i.^3+i.^4+(-4).*i.*((-9)+3.*k+(-3).* ...
  k.^2+k.^3)+2.*(13+(-16).*k+18.*k.^2+(-8).*k.^3+k.^4))+h.^5.*((-1)+ ...
  k).*(360.*i.^2+120.*i.^3+15.*i.^4+10.*i.*(47+3.*k+(-3).*k.^2+k.^3) ...
  +(-4).*((-49)+(-39).*k+51.*k.^2+(-29).*k.^3+6.*k.^4))).*log(1+h+( ...
  -1).*h.*k).^2+(-120).*((-1)+h.*k).^2.*log(1+(-1).*h.*k).*((-37)+ ...
  25.*h+575.*h.^2+675.*h.^3+111.*h.*k+(-50).*h.^2.*k+(-575).*h.^3.* ...
  k+(-111).*h.^2.*k.^2+25.*h.^3.*k.^2+37.*h.^3.*k.^3+150.*((-1)+h.*( ...
  (-3)+k)).*(1+h+(-1).*h.*k).^2.*log(1+h+(-1).*h.*k)));
            end
        end
    end
end
fprintf('Matrix Calculation done \n')
sparseS = sparse(rows, cols, values, n, n * n);

end
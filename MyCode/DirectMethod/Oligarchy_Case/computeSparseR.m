function [sparseR] = computeSparseR(n, V, W, t, z, c)
% n is the number of basis functions
% V is N
% W is total wealth of the system
% t is chi
% z is zeta
% c is the wZero parameter in f(theta)
h = 1.0/(n+1);

num_nonzeros = 0;

for i = 1:n
    for j = 1:n
        if (i == (n-1))
            num_nonzeros = num_nonzeros + 1;
        elseif ((i == n) && (j < n))
            num_nonzeros = num_nonzeros + 1;
        elseif ((i == n) && (j == n))
            num_nonzeros = num_nonzeros + 1;
        elseif (j == (i-1))
            num_nonzeros = num_nonzeros + 1;
        elseif (j == i)
             num_nonzeros = num_nonzeros + 1;
        elseif (j == (i+1))
            num_nonzeros = num_nonzeros + 1;
        elseif ((j == (i+2)) && (j < n))
            num_nonzeros = num_nonzeros + 1;
        elseif ((j == (i+2)) && (j == n))
            num_nonzeros = num_nonzeros + 1;
        elseif (j == (i+3))
            num_nonzeros = num_nonzeros + 1;
        end
    end
end

rows = zeros(num_nonzeros, 1);
cols = zeros(num_nonzeros, 1);
values = zeros(num_nonzeros, 1);
index = 0;

for i = 1:n
    for j = 1:n
        if (i == (n-1))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = 0;
        elseif ((i == n) && (j < n))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/2).*h.^(-1).*V.^(-1).*W.^(-1).*((-3).*c.*h.^2.*t.*V.*W+2.* ...
  ...
h.^2.*t.*W.^2+7.*c.^2.*h.^2.*V.^2.*z+(-3).*c.*h.^2.*V.*W.*z+2.*c.* ...
...
  V.*(3.*c.*((-1)+h.*j).^2.*V.*z+(-1).*W.*(1+2.*t+2.*z+h.^2.*j.^2.*( ...
...
  t+z)+h.*(1+t+z+(-1).*j.*((-1)+t+z)))).*log(1+(-1).*h.*j)+(-2).* ...
...
  c.^2.*((-1)+h.*j).^2.*V.^2.*z.*log(1+(-1).*h.*j).^2+c.*(1+h+(-1).* ...
...
  h.*j).^2.*V.*(t.*W+(-3).*c.*V.*z+W.*z).*log(1+h+(-1).*h.*j)+c.^2.* ...
...
  (1+h+(-1).*h.*j).^2.*V.^2.*z.*log(1+h+(-1).*h.*j).^2+(-2).*c.*V.* ...
...
  W.*log(((-1)+h.*j).^(-1).*((-1)+h+h.*j))+(-2).*c.*h.*V.*W.*log((( ...
...
  -1)+h.*j).^(-1).*((-1)+h+h.*j))+(-2).*c.*h.*j.*V.*W.*log(((-1)+h.* ...
...
  j).^(-1).*((-1)+h+h.*j))+(-2).*c.*t.*V.*W.*log(((-1)+h.*j).^(-1).* ...
...
  ((-1)+h+h.*j))+(-2).*c.*h.*t.*V.*W.*log(((-1)+h.*j).^(-1).*((-1)+ ...
...
  h+h.*j))+(-2).*c.*h.*j.*t.*V.*W.*log(((-1)+h.*j).^(-1).*((-1)+h+ ...
...
  h.*j))+(-2).*c.*V.*W.*z.*log(((-1)+h.*j).^(-1).*((-1)+h+h.*j))+( ...
...
  -2).*c.*h.*V.*W.*z.*log(((-1)+h.*j).^(-1).*((-1)+h+h.*j))+(-2).* ...
...
  c.*h.*j.*V.*W.*z.*log(((-1)+h.*j).^(-1).*((-1)+h+h.*j))+2.*c.*V.* ...
...
  W.*log(1+(-1).*h.*(1+j))+2.*c.*h.*V.*W.*log(1+(-1).*h.*(1+j))+2.* ...
...
  c.*h.*j.*V.*W.*log(1+(-1).*h.*(1+j))+3.*c.*t.*V.*W.*log(1+(-1).* ...
...
  h.*(1+j))+c.*h.^2.*t.*V.*W.*log(1+(-1).*h.*(1+j))+2.*c.*h.^2.*j.* ...
...
  t.*V.*W.*log(1+(-1).*h.*(1+j))+c.*h.^2.*j.^2.*t.*V.*W.*log(1+(-1) ...
...
  .*h.*(1+j))+(-3).*c.^2.*V.^2.*z.*log(1+(-1).*h.*(1+j))+6.*c.^2.* ...
...
  h.*V.^2.*z.*log(1+(-1).*h.*(1+j))+(-3).*c.^2.*h.^2.*V.^2.*z.*log( ...
...
  1+(-1).*h.*(1+j))+6.*c.^2.*h.*j.*V.^2.*z.*log(1+(-1).*h.*(1+j))+( ...
...
  -6).*c.^2.*h.^2.*j.*V.^2.*z.*log(1+(-1).*h.*(1+j))+(-3).*c.^2.* ...
...
  h.^2.*j.^2.*V.^2.*z.*log(1+(-1).*h.*(1+j))+3.*c.*V.*W.*z.*log(1+( ...
...
  -1).*h.*(1+j))+c.*h.^2.*V.*W.*z.*log(1+(-1).*h.*(1+j))+2.*c.* ...
  ...
h.^2.*j.*V.*W.*z.*log(1+(-1).*h.*(1+j))+c.*h.^2.*j.^2.*V.*W.*z.* ...
 ...
 log(1+(-1).*h.*(1+j))+c.^2.*V.^2.*z.*log(1+(-1).*h.*(1+j)).^2+(-2) ...
...
  .*c.^2.*h.*V.^2.*z.*log(1+(-1).*h.*(1+j)).^2+c.^2.*h.^2.*V.^2.*z.* ...
...
  log(1+(-1).*h.*(1+j)).^2+(-2).*c.^2.*h.*j.*V.^2.*z.*log(1+(-1).* ...
...
  h.*(1+j)).^2+2.*c.^2.*h.^2.*j.*V.^2.*z.*log(1+(-1).*h.*(1+j)).^2+ ...
...
  c.^2.*h.^2.*j.^2.*V.^2.*z.*log(1+(-1).*h.*(1+j)).^2);
        elseif ((i == n) && (j == n))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/4).*h.*V.^(-1).*W.^(-1).*(4.*t.*W.^2+2.*c.^2.*V.^2.*z.*(7+(-12) ...
...
  .*log(2)+4.*log(2).^2)+c.*V.*W.*(t+z).*((-6)+log(256))+2.*c.*V.*( ...
...
  2.*t.*W+2.*W.*z+c.*V.*z.*((-6)+log(256))).*log(h)+4.*c.^2.*V.^2.* ...
...
  z.*log(h).^2);
        elseif (j == (i-1))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/432).*c.^(-1).*h.^(-2).*V.^(-1).*W.^(-1).*(h.*((-36).*h.*((-3)+ ...
...
  h+3.*h.*j).*t.*W.^2+(-2).*c.^2.*(30+(-3).*h.*(19+20.*j)+h.^2.*(19+ ...
...
  57.*j+30.*j.^2)).*V.^2.*z+c.*V.*W.*(6.*(5+6.*t+6.*z)+(-3).*h.*(19+ ...
...
  30.*t+30.*z+4.*j.*(5+6.*t+6.*z))+h.^2.*(19+30.*t+30.*z+6.*j.^2.*( ...
...
  5+6.*t+6.*z)+j.*(57+90.*t+90.*z))))+6.*c.*((-1)+h.*j).^2.*V.*((-2) ...
...
  .*c.*((-5)+h.*(9+5.*j)).*V.*z+W.*((-5)+(-6).*t+(-6).*z+9.*h.*(1+ ...
...
  2.*t+2.*z)+h.*j.*(5+6.*t+6.*z))).*log(1+(-1).*h.*j)+(-18).*c.*(( ...
...
  -1)+h.*j).^2.*V.*(((-1)+h.*((-3)+j)).*W+(-2).*c.*((-1)+h.*(3+j)).* ...
...
  V.*z).*log(1+(-1).*h.*j).^2+6.*c.*((-1)+h+h.*j).^3.*V.*(10.*c.*V.* ...
...
  z+(-1).*W.*(5+6.*t+6.*z)).*log(1+(-1).*h.*(1+j))+(-18).*c.*((-1)+ ...
...
  h+h.*j).^3.*V.*((-1).*W+2.*c.*V.*z).*log(1+(-1).*h.*(1+j)).^2);

        elseif (j == i)
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/72).*((-19)+19.*h.*j+(-30).*t+30.*h.*j.*t+36.*c.^(-1).*t.*V.^( ...
...
  -1).*W+(-36).*c.^(-1).*h.*j.*t.*V.^(-1).*W+(-30).*z+30.*h.*j.*z+ ...
...
  38.*c.*V.*W.^(-1).*z+(-38).*c.*h.*j.*V.*W.^(-1).*z+2.*h.^(-2).*(( ...
...
  -1)+h.*j).^3.*W.^(-1).*((-10).*c.*V.*z+W.*(5+6.*t+6.*z)).*log(1+( ...
...
  -1).*h.*j)+(-6).*h.^(-2).*((-1)+h.*j).^3.*W.^(-1).*(W+(-2).*c.*V.* ...
...
  z).*log(1+(-1).*h.*j).^2+h.^(-2).*((-1)+h.*((-1)+j)).^3.*W.^(-1).* ...
...
  (10.*c.*V.*z+(-1).*W.*(5+6.*t+6.*z)).*log(1+h+(-1).*h.*j)+3.*h.^( ...
...
  -2).*((-1)+h.*((-1)+j)).^3.*W.^(-1).*(W+(-2).*c.*V.*z).*log(1+h+( ...
...
  -1).*h.*j).^2+15.*log(1+(-1).*h.*(1+j))+5.*h.^(-2).*log(1+(-1).* ...
...
  h.*(1+j))+(-15).*h.^(-1).*log(1+(-1).*h.*(1+j))+(-5).*h.*log(1+( ...
...
  -1).*h.*(1+j))+30.*j.*log(1+(-1).*h.*(1+j))+(-15).*h.^(-1).*j.* ...
...
  log(1+(-1).*h.*(1+j))+(-15).*h.*j.*log(1+(-1).*h.*(1+j))+15.* ...
  ...
j.^2.*log(1+(-1).*h.*(1+j))+(-15).*h.*j.^2.*log(1+(-1).*h.*(1+j))+ ...
...
  (-5).*h.*j.^3.*log(1+(-1).*h.*(1+j))+18.*t.*log(1+(-1).*h.*(1+j))+ ...
...
  6.*h.^(-2).*t.*log(1+(-1).*h.*(1+j))+(-18).*h.^(-1).*t.*log(1+(-1) ...
...
  .*h.*(1+j))+(-6).*h.*t.*log(1+(-1).*h.*(1+j))+36.*j.*t.*log(1+(-1) ...
...
  .*h.*(1+j))+(-18).*h.^(-1).*j.*t.*log(1+(-1).*h.*(1+j))+(-18).*h.* ...
...
  j.*t.*log(1+(-1).*h.*(1+j))+18.*j.^2.*t.*log(1+(-1).*h.*(1+j))+( ...
...
  -18).*h.*j.^2.*t.*log(1+(-1).*h.*(1+j))+(-6).*h.*j.^3.*t.*log(1+( ...
...
  -1).*h.*(1+j))+18.*z.*log(1+(-1).*h.*(1+j))+6.*h.^(-2).*z.*log(1+( ...
...
  -1).*h.*(1+j))+(-18).*h.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-6).*h.* ...
...
  z.*log(1+(-1).*h.*(1+j))+36.*j.*z.*log(1+(-1).*h.*(1+j))+(-18).* ...
...
  h.^(-1).*j.*z.*log(1+(-1).*h.*(1+j))+(-18).*h.*j.*z.*log(1+(-1).* ...
...
  h.*(1+j))+18.*j.^2.*z.*log(1+(-1).*h.*(1+j))+(-18).*h.*j.^2.*z.* ...
...
  log(1+(-1).*h.*(1+j))+(-6).*h.*j.^3.*z.*log(1+(-1).*h.*(1+j))+( ...
...
  -30).*c.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-10).*c.*h.^(-2).* ...
...
  V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+30.*c.*h.^(-1).*V.*W.^(-1).* ...
...
  z.*log(1+(-1).*h.*(1+j))+10.*c.*h.*V.*W.^(-1).*z.*log(1+(-1).*h.*( ...
...
  1+j))+(-60).*c.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+30.*c.* ...
...
  h.^(-1).*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+30.*c.*h.*j.*V.* ...
...
  W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-30).*c.*j.^2.*V.*W.^(-1).*z.* ...
...
  log(1+(-1).*h.*(1+j))+30.*c.*h.*j.^2.*V.*W.^(-1).*z.*log(1+(-1).* ...
...
  h.*(1+j))+10.*c.*h.*j.^3.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+( ...
...
  -9).*log(1+(-1).*h.*(1+j)).^2+(-3).*h.^(-2).*log(1+(-1).*h.*(1+j)) ...
...
  .^2+9.*h.^(-1).*log(1+(-1).*h.*(1+j)).^2+3.*h.*log(1+(-1).*h.*(1+ ...
...
  j)).^2+(-18).*j.*log(1+(-1).*h.*(1+j)).^2+9.*h.^(-1).*j.*log(1+( ...
...
  -1).*h.*(1+j)).^2+9.*h.*j.*log(1+(-1).*h.*(1+j)).^2+(-9).*j.^2.* ...
...
  log(1+(-1).*h.*(1+j)).^2+9.*h.*j.^2.*log(1+(-1).*h.*(1+j)).^2+3.* ...
...
  h.*j.^3.*log(1+(-1).*h.*(1+j)).^2+18.*c.*V.*W.^(-1).*z.*log(1+(-1) ...
...
  .*h.*(1+j)).^2+6.*c.*h.^(-2).*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)) ...
...
  .^2+(-18).*c.*h.^(-1).*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+( ...
...
  -6).*c.*h.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+36.*c.*j.*V.* ...
...
  W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+(-18).*c.*h.^(-1).*j.*V.*W.^( ...
...
  -1).*z.*log(1+(-1).*h.*(1+j)).^2+(-18).*c.*h.*j.*V.*W.^(-1).*z.* ...
...
  log(1+(-1).*h.*(1+j)).^2+18.*c.*j.^2.*V.*W.^(-1).*z.*log(1+(-1).* ...
...
  h.*(1+j)).^2+(-18).*c.*h.*j.^2.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+ ...
...
  j)).^2+(-6).*c.*h.*j.^3.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2); ...
        elseif (j == (i+1))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/216).*(60+(-30).*h.^(-1)+(-22).*h+60.*i+(-6).*h.*i+(-3).*h.* ...
  ...
i.^2+(-54).*h.*j+(-54).*h.*i.*j+27.*h.*j.^2+72.*t+(-36).*h.^(-1).* ...
...
  t+(-12).*h.*t+72.*i.*t+36.*h.*i.*t+18.*h.*i.^2.*t+(-108).*h.*j.*t+ ...
...
  (-108).*h.*i.*j.*t+54.*h.*j.^2.*t+(-72).*c.^(-1).*h.*t.*V.^(-1).* ...
...
  W+(-216).*c.^(-1).*h.*i.*t.*V.^(-1).*W+(-108).*c.^(-1).*h.*i.^2.* ...
...
  t.*V.^(-1).*W+216.*c.^(-1).*h.*j.*t.*V.^(-1).*W+216.*c.^(-1).*h.* ...
...
  i.*j.*t.*V.^(-1).*W+(-108).*c.^(-1).*h.*j.^2.*t.*V.^(-1).*W+72.*z+ ...
...
  (-36).*h.^(-1).*z+(-12).*h.*z+72.*i.*z+36.*h.*i.*z+18.*h.*i.^2.*z+ ...
...
  (-108).*h.*j.*z+(-108).*h.*i.*j.*z+54.*h.*j.^2.*z+(-120).*c.*V.* ...
...
  W.^(-1).*z+60.*c.*h.^(-1).*V.*W.^(-1).*z+44.*c.*h.*V.*W.^(-1).*z+( ...
...
  -120).*c.*i.*V.*W.^(-1).*z+12.*c.*h.*i.*V.*W.^(-1).*z+6.*c.*h.* ...
...
  i.^2.*V.*W.^(-1).*z+108.*c.*h.*j.*V.*W.^(-1).*z+108.*c.*h.*i.*j.* ...
...
  V.*W.^(-1).*z+(-54).*c.*h.*j.^2.*V.*W.^(-1).*z+3.*h.^(-2).*((-1)+ ...
...
  h.*i).^2.*W.^(-1).*((-2).*c.*(5+h.*(9+4.*i+(-9).*j)).*V.*z+W.*(5+ ...
...
  6.*t+6.*z+(-9).*h.*((-1)+j).*(1+2.*t+2.*z)+4.*h.*i.*(1+3.*t+3.*z)) ...
...
  ).*log(1+(-1).*h.*i)+9.*h.^(-2).*((-1)+h.*i).^2.*W.^(-1).*(((-1)+ ...
...
  h.*(3+4.*i+(-3).*j)).*W+2.*c.*(1+h.*(3+2.*i+(-3).*j)).*V.*z).*log( ...
...
  1+(-1).*h.*i).^2+(-54).*h.^(-1).*((-1)+h.*j).^2.*W.^(-1).*(W+2.* ...
...
  t.*W+(-2).*c.*V.*z+2.*W.*z).*log(1+(-1).*h.*j)+(-54).*h.^(-1).*(( ...
...
  -1)+h.*j).^2.*W.^(-1).*(W+2.*c.*V.*z).*log(1+(-1).*h.*j).^2+(-72) ...
...
  .*log(1+(-1).*h.*(1+j))+(-15).*h.^(-2).*log(1+(-1).*h.*(1+j))+63.* ...
...
  h.^(-1).*log(1+(-1).*h.*(1+j))+12.*h.*log(1+(-1).*h.*(1+j))+(-18) ...
...
  .*i.*log(1+(-1).*h.*(1+j))+18.*h.^(-1).*i.*log(1+(-1).*h.*(1+j))+( ...
...
  -36).*h.*i.*log(1+(-1).*h.*(1+j))+9.*i.^2.*log(1+(-1).*h.*(1+j))+( ...
...
  -45).*h.*i.^2.*log(1+(-1).*h.*(1+j))+(-12).*h.*i.^3.*log(1+(-1).* ...
...
  h.*(1+j))+(-108).*j.*log(1+(-1).*h.*(1+j))+27.*h.^(-1).*j.*log(1+( ...
...
  -1).*h.*(1+j))+108.*h.*j.*log(1+(-1).*h.*(1+j))+(-54).*i.*j.*log( ...
...
  1+(-1).*h.*(1+j))+108.*h.*i.*j.*log(1+(-1).*h.*(1+j))+27.*h.* ...
  ...
i.^2.*j.*log(1+(-1).*h.*(1+j))+(-18).*h.^(-2).*t.*log(1+(-1).*h.*( ...
...
  1+j))+54.*h.^(-1).*t.*log(1+(-1).*h.*(1+j))+(-72).*h.*t.*log(1+( ...
...
  -1).*h.*(1+j))+108.*i.*t.*log(1+(-1).*h.*(1+j))+(-216).*h.*i.*t.* ...
...
  log(1+(-1).*h.*(1+j))+54.*i.^2.*t.*log(1+(-1).*h.*(1+j))+(-162).* ...
...
  h.*i.^2.*t.*log(1+(-1).*h.*(1+j))+(-36).*h.*i.^3.*t.*log(1+(-1).* ...
...
  h.*(1+j))+(-216).*j.*t.*log(1+(-1).*h.*(1+j))+54.*h.^(-1).*j.*t.* ...
...
  log(1+(-1).*h.*(1+j))+216.*h.*j.*t.*log(1+(-1).*h.*(1+j))+(-108).* ...
...
  i.*j.*t.*log(1+(-1).*h.*(1+j))+216.*h.*i.*j.*t.*log(1+(-1).*h.*(1+ ...
...
  j))+54.*h.*i.^2.*j.*t.*log(1+(-1).*h.*(1+j))+(-18).*h.^(-2).*z.* ...
...
  log(1+(-1).*h.*(1+j))+54.*h.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-72) ...
...
  .*h.*z.*log(1+(-1).*h.*(1+j))+108.*i.*z.*log(1+(-1).*h.*(1+j))+( ...
...
  -216).*h.*i.*z.*log(1+(-1).*h.*(1+j))+54.*i.^2.*z.*log(1+(-1).*h.* ...
...
  (1+j))+(-162).*h.*i.^2.*z.*log(1+(-1).*h.*(1+j))+(-36).*h.*i.^3.* ...
...
  z.*log(1+(-1).*h.*(1+j))+(-216).*j.*z.*log(1+(-1).*h.*(1+j))+54.* ...
...
  h.^(-1).*j.*z.*log(1+(-1).*h.*(1+j))+216.*h.*j.*z.*log(1+(-1).*h.* ...
...
  (1+j))+(-108).*i.*j.*z.*log(1+(-1).*h.*(1+j))+216.*h.*i.*j.*z.* ...
...
  log(1+(-1).*h.*(1+j))+54.*h.*i.^2.*j.*z.*log(1+(-1).*h.*(1+j))+ ...
...
  144.*c.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+30.*c.*h.^(-2).*V.* ...
...
  W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-126).*c.*h.^(-1).*V.*W.^(-1).* ...
...
  z.*log(1+(-1).*h.*(1+j))+(-24).*c.*h.*V.*W.^(-1).*z.*log(1+(-1).* ...
...
  h.*(1+j))+36.*c.*i.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-36).* ...
...
  c.*h.^(-1).*i.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+72.*c.*h.*i.* ...
...
  V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-18).*c.*i.^2.*V.*W.^(-1).* ...
...
  z.*log(1+(-1).*h.*(1+j))+90.*c.*h.*i.^2.*V.*W.^(-1).*z.*log(1+(-1) ...
...
  .*h.*(1+j))+24.*c.*h.*i.^3.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+ ...
...
  216.*c.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-54).*c.*h.^(-1) ...
...
  .*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+(-216).*c.*h.*j.*V.*W.^( ...
...
  -1).*z.*log(1+(-1).*h.*(1+j))+108.*c.*i.*j.*V.*W.^(-1).*z.*log(1+( ...
...
  -1).*h.*(1+j))+(-216).*c.*h.*i.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*( ...
...
  1+j))+(-54).*c.*h.*i.^2.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j))+ ...
...
  216.*log(1+(-1).*h.*(1+j)).^2+9.*h.^(-2).*log(1+(-1).*h.*(1+j)) ...
...
  .^2+(-81).*h.^(-1).*log(1+(-1).*h.*(1+j)).^2+(-180).*h.*log(1+(-1) ...
...
  .*h.*(1+j)).^2+270.*i.*log(1+(-1).*h.*(1+j)).^2+(-54).*h.^(-1).* ...
...
  i.*log(1+(-1).*h.*(1+j)).^2+(-324).*h.*i.*log(1+(-1).*h.*(1+j)) ...
...
  .^2+81.*i.^2.*log(1+(-1).*h.*(1+j)).^2+(-189).*h.*i.^2.*log(1+(-1) ...
...
  .*h.*(1+j)).^2+(-36).*h.*i.^3.*log(1+(-1).*h.*(1+j)).^2+(-108).* ...
...
  j.*log(1+(-1).*h.*(1+j)).^2+27.*h.^(-1).*j.*log(1+(-1).*h.*(1+j)) ...
...
  .^2+108.*h.*j.*log(1+(-1).*h.*(1+j)).^2+(-54).*i.*j.*log(1+(-1).* ...
...
  h.*(1+j)).^2+108.*h.*i.*j.*log(1+(-1).*h.*(1+j)).^2+27.*h.*i.^2.* ...
...
  j.*log(1+(-1).*h.*(1+j)).^2+(-18).*c.*h.^(-2).*V.*W.^(-1).*z.*log( ...
...
  1+(-1).*h.*(1+j)).^2+54.*c.*h.^(-1).*V.*W.^(-1).*z.*log(1+(-1).* ...
...
  h.*(1+j)).^2+(-72).*c.*h.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+ ...
...
  108.*c.*i.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+(-216).*c.*h.* ...
...
  i.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+54.*c.*i.^2.*V.*W.^(-1) ...
...
  .*z.*log(1+(-1).*h.*(1+j)).^2+(-162).*c.*h.*i.^2.*V.*W.^(-1).*z.* ...
...
  log(1+(-1).*h.*(1+j)).^2+(-36).*c.*h.*i.^3.*V.*W.^(-1).*z.*log(1+( ...
...
  -1).*h.*(1+j)).^2+(-216).*c.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+ ...
...
  j)).^2+54.*c.*h.^(-1).*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+ ...
...
  216.*c.*h.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+(-108).*c.* ...
...
  i.*j.*V.*W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+216.*c.*h.*i.*j.*V.* ...
...
  W.^(-1).*z.*log(1+(-1).*h.*(1+j)).^2+54.*c.*h.*i.^2.*j.*V.*W.^(-1) ...
...
  .*z.*log(1+(-1).*h.*(1+j)).^2);
        elseif ((j == (i+2)) && (j < n))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (-1/432).*c.^(-1).*h.^(-2).*V.^(-1).*W.^(-1).*(h.*(36.*h.*(3+h+( ...
 ...
 -3).*h.*j).*t.*W.^2+2.*c.^2.*(30+h.*(57+(-60).*j)+h.^2.*(19+(-57) ...
...
  .*j+30.*j.^2)).*V.^2.*z+(-1).*c.*V.*W.*(6.*(5+6.*t+6.*z)+h.*(57+ ...
...
  90.*t+90.*z+(-12).*j.*(5+6.*t+6.*z))+h.^2.*(19+30.*t+30.*z+6.* ...
 ...
 j.^2.*(5+6.*t+6.*z)+(-3).*j.*(19+30.*t+30.*z))))+h.*(3+i+(-1).*j) ...
...
  .*(36.*h.*((-3).*(1+i+(-1).*j)+h.*(9+2.*i.^2+(-1).*i.*((-9)+j)+( ...
...
  -6).*j+(-1).*j.^2)).*t.*W.^2+2.*c.^2.*((-30)+3.*h.*(21+i+19.*j)+ ...
...
  h.^2.*((-9)+8.*i.^2+i.*(21+(-19).*j)+(-84).*j+(-19).*j.^2)).* ...
  ...
V.^2.*z+c.*V.*W.*(6.*(5+6.*t+6.*z)+(-3).*h.*(i.*(1+(-6).*t+(-6).* ...
...
  z)+3.*(7+6.*t+6.*z)+j.*(19+30.*t+30.*z))+h.^2.*((-8).*i.^2.*(1+3.* ...
...
  t+3.*z)+(-9).*((-1)+6.*t+6.*z)+12.*j.*(7+12.*t+12.*z)+(-3).*i.*(7+ ...
...
  30.*t+30.*z)+i.*j.*(19+30.*t+30.*z)+j.^2.*(19+30.*t+30.*z))))+(-6) ...
...
  .*c.*((-1)+h.*j).^2.*V.*(2.*c.*((-5)+h.*((-9)+5.*j)).*V.*z+W.*(5+ ...
...
  6.*t+6.*z+9.*h.*(1+2.*t+2.*z)+(-1).*h.*j.*(5+6.*t+6.*z))).*log(1+( ...
...
  -1).*h.*j)+6.*c.*((-1)+h.*j).^2.*V.*((-2).*c.*((-5)+h.*(9+5.*j)).* ...
...
  V.*z+W.*((-5)+(-6).*t+(-6).*z+9.*h.*(1+2.*t+2.*z)+h.*j.*(5+6.*t+ ...
...
  6.*z))).*log(1+(-1).*h.*j)+18.*c.*((-1)+h.*j).^2.*V.*(W+(-1).*h.*( ...
...
  3+j).*W+2.*c.*((-1)+h.*((-3)+j)).*V.*z).*log(1+(-1).*h.*j).^2+( ...
...
  -18).*c.*((-1)+h.*j).^2.*V.*(((-1)+h.*((-3)+j)).*W+(-2).*c.*((-1)+ ...
...
  h.*(3+j)).*V.*z).*log(1+(-1).*h.*j).^2+6.*c.*((-1)+h.*((-1)+j)) ...
...
  .^3.*V.*(10.*c.*V.*z+(-1).*W.*(5+6.*t+6.*z)).*log(1+h+(-1).*h.*j)+ ...
...
  (-18).*c.*((-1)+h.*((-1)+j)).^3.*V.*((-1).*W+2.*c.*V.*z).*log(1+h+ ...
...
  (-1).*h.*j).^2+6.*c.*((-1)+h.*(3+i)).^2.*V.*((-2).*c.*(5+h.*(3+4.* ...
...
  i+(-9).*j)).*V.*z+W.*(5+6.*t+6.*z+h.*(3+18.*t+18.*z+(-9).*j.*(1+ ...
...
  2.*t+2.*z)+4.*i.*(1+3.*t+3.*z)))).*log(1+(-1).*h.*(1+j))+18.*c.*(( ...
...
  -1)+h.*(3+i)).^2.*V.*(((-1)+h.*(9+4.*i+(-3).*j)).*W+2.*c.*(1+h.*( ...
...
  3+2.*i+(-3).*j)).*V.*z).*log(1+(-1).*h.*(1+j)).^2);
        elseif ((j == (i+2)) && (j == n))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (1/144).*c.^(-1).*V.^(-1).*W.^(-1).*(72.*((-1)+h.*j).*t.*W.^2+4.* ...
...
  c.^2.*V.^2.*z.*((-9).*((-1)+log(4)).^2+h.*((-10)+12.*log(2).^2+9.* ...
...
  j.*((-1)+log(4)).^2+log(16)))+c.*V.*W.*((-9).*((-2)+8.*log(2).^2+ ...
...
  4.*z.*((-1)+log(16))+2.*t.*((-2)+log(256))+log(256))+h.*(4.*(5+ ...
...
  30.*log(2).^2+(-1).*log(4)+6.*t.*(1+log(4))+6.*z.*(1+log(4)))+9.* ...
...
  j.*((-2)+8.*log(2).^2+4.*t.*((-1)+log(16))+4.*z.*((-1)+log(16))+ ...
...
  log(256))))+6.*c.*V.*(2.*c.*V.*z.*(6+(-24).*log(2)+h.*(4+3.*j.*(( ...
...
  -2)+log(256))+log(256)))+W.*((-3).*(2+4.*t+4.*z+log(256))+h.*((-4) ...
...
  +40.*log(2)+3.*j.*(2+4.*t+4.*z+log(256))))).*log(h)+36.*c.*V.*((( ...
...
  -1)+h.*(2+j)).*W+2.*c.*((-1)+h.*j).*V.*z).*log(h).^2);
        elseif (j == (i+3))
            index = index + 1;
            rows(index) = i;
            cols(index) = j;
            values(index) = (-1/432).*c.^(-1).*h.^(-2).*V.^(-1).*W.^(-1).*(h.*(2+i+(-1).*j).*( ...
...
  36.*h.*((-3).*(4+i+(-1).*j)+h.*(14+2.*i.^2+(-1).*i.*((-11)+j)+j+( ...
...
  -1).*j.^2)).*t.*W.^2+2.*c.^2.*((-30)+3.*h.*((-16)+i+19.*j)+h.^2.*( ...
...
  86+8.*i.^2+i.*(59+(-19).*j)+(-11).*j+(-19).*j.^2)).*V.^2.*z+c.*V.* ...
...
  W.*(6.*(5+6.*t+6.*z)+3.*h.*(16.*(1+3.*t+3.*z)+i.*((-1)+6.*t+6.*z)+ ...
...
  (-1).*j.*(19+30.*t+30.*z))+h.^2.*((-8).*i.^2.*(1+3.*t+3.*z)+j.*( ...
...
  11+6.*t+6.*z)+j.^2.*(19+30.*t+30.*z)+(-2).*(43+102.*t+102.*z)+i.*( ...
...
  (-59)+(-150).*t+(-150).*z+j.*(19+30.*t+30.*z)))))+6.*c.*((-1)+h.* ...
...
  j).^2.*V.*(2.*c.*(5+h.*(9+(-5).*j)).*V.*z+W.*((-5)+(-6).*t+(-6).* ...
...
  z+(-9).*h.*(1+2.*t+2.*z)+h.*j.*(5+6.*t+6.*z))).*log(1+(-1).*h.*j)+ ...
...
  (-18).*c.*((-1)+h.*j).^2.*V.*(((-1)+h.*(3+j)).*W+2.*c.*(1+(-1).* ...
...
  h.*((-3)+j)).*V.*z).*log(1+(-1).*h.*j).^2+6.*c.*((-1)+h.*(2+i)) ...
...
  .^2.*V.*((-2).*c.*(5+h.*(17+4.*i+(-9).*j)).*V.*z+W.*(5+6.*t+6.*z+ ...
...
  h.*(17+42.*t+42.*z+(-9).*j.*(1+2.*t+2.*z)+4.*i.*(1+3.*t+3.*z)))).* ...
...
  log(1+h+(-1).*h.*j)+18.*c.*((-1)+h.*(2+i)).^2.*V.*(((-1)+h.*(11+ ...
...
  4.*i+(-3).*j)).*W+2.*c.*(1+h.*(7+2.*i+(-3).*j)).*V.*z).*log(1+h+( ...
...
  -1).*h.*j).^2);
        end
    end
end

sparseR = sparse(rows, cols, values, n, n);
end

